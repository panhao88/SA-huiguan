{"remainingRequest":"C:\\work\\workspace\\rock-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\workspace\\rock-ui\\src\\views\\userlist\\Userlist.vue?vue&type=template&id=58996f9f&scoped=true&","dependencies":[{"path":"C:\\work\\workspace\\rock-ui\\src\\views\\userlist\\Userlist.vue","mtime":1610528534311},{"path":"C:\\work\\workspace\\rock-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\workspace\\rock-ui\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\work\\workspace\\rock-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\workspace\\rock-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}