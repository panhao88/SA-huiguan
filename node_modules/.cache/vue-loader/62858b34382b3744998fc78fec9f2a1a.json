{"remainingRequest":"C:\\work\\workspace\\rock-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\workspace\\rock-ui\\src\\views\\userlist\\Userlist.vue?vue&type=template&id=74352545&scoped=true&","dependencies":[{"path":"C:\\work\\workspace\\rock-ui\\src\\views\\userlist\\Userlist.vue","mtime":1611135956448},{"path":"C:\\work\\workspace\\rock-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\workspace\\rock-ui\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\work\\workspace\\rock-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\workspace\\rock-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}