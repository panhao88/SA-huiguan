{"remainingRequest":"C:\\work\\workspace\\rock-ui\\node_modules\\thread-loader\\dist\\cjs.js!C:\\work\\workspace\\rock-ui\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\workspace\\rock-ui\\src\\store\\user\\user.js","dependencies":[{"path":"C:\\work\\workspace\\rock-ui\\src\\store\\user\\user.js","mtime":1610504327587},{"path":"C:\\work\\workspace\\rock-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\workspace\\rock-ui\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\workspace\\rock-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/work/workspace/rock-ui/src/store/user/user.js"],"names":["Vue","api","router","Message","namespaced","state","rolelist","totalRow","allmenu","list","mutations","setrolelist","data","setallmenu","settotalRow","setlist","actions","login","commit","username","password","res","code","success","localStorage","setItem","JSON","stringify","account","push","console","log","getexit","dispatch","role","pageNo","pageSize","name","lock","map","item","error","msg","getadd","info","Modifythe","id","delrole","getAssign","roleId","peris","getAllMenu","del","getupdate","pname","actionKey","viewPath","icon","ptype","pid","remark","addpermissions","Therefresh","synchronous","mypermissions"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport api from '../../http/api'\r\nimport router from '../../router'\r\nimport { Message } from 'element-ui'\r\nexport default {\r\n    // 开启命名空间,这个文件就是单独的一个vuex的模块\r\n    namespaced: true,\r\n    state: {\r\n        rolelist: [],//角色\r\n        totalRow: 0, //角色总条数\r\n        allmenu: [], //权限菜单\r\n        list:[]\r\n    },\r\n    mutations: {\r\n        // 角色列表\r\n        setrolelist(state, data) {\r\n            state.rolelist = data\r\n        },\r\n        // 权限菜单\r\n        setallmenu(state, data) {\r\n            state.allmenu = data\r\n        },\r\n        settotalRow(state, data) {\r\n            state.totalRow = data\r\n        },\r\n        setlist(state,data){\r\n            state,list = data\r\n        }\r\n    },\r\n    actions: {\r\n        //登录\r\n        async login({ commit }, { username, password }) {\r\n            try {\r\n                let res = await api.login({ username, password })\r\n                if (res.code === 200) {\r\n                    Message.success(\"登录成功\")\r\n                    localStorage.setItem('adminUser', JSON.stringify(res.account))\r\n                    router.push('/')\r\n                    console.log(res, \"登录\")\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //退出登录\r\n        async getexit({ dispatch }) {\r\n            try {\r\n                let res = await api.getexit()\r\n                console.log(res, \"退出登录\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //角色列表\r\n        async role({ commit }, { pageNo, pageSize, name, lock }) {\r\n            try {\r\n                let res = await api.role({ pageNo, pageSize, name, lock })\r\n                if (res.code === 200) {\r\n                    commit('setrolelist', res.data)\r\n                    commit('settotalRow', res.totalRow)\r\n                    res.data.map(item => {\r\n                        if (item.lock === \"1\") {\r\n                            item.lock = false\r\n                        } else if (item.lock === \"0\") {\r\n                            item.lock = true\r\n                        }\r\n                    })\r\n                }else if(res.code === 401){\r\n                    Message.error(res.msg)\r\n                }\r\n                console.log(res, \"角色列表\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //新增角色\r\n        async getadd({ dispatch }, { name, info, pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.getadd({ name, info })\r\n                if (res.code === 200) {\r\n                    dispatch(\"role\", { pageNo, pageSize })\r\n                    Message.success(res.msg)\r\n                }else{\r\n                    Message.success(\"添加失败\")\r\n                }\r\n                console.log(res, \"新增角色\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //修改角色\r\n        async Modifythe({ dispatch }, { name, info, id, lock,pageNo, pageSize}) {\r\n            try {\r\n                let res = await api.Modifythe({ name, info, id, lock })\r\n                if (res.code === 200) {\r\n                    dispatch(\"role\",{pageNo, pageSize})\r\n                    Message.success(res.msg)\r\n                }else if(res.code === 403){\r\n                    Message.error(res.msg)\r\n                }\r\n                console.log(res, \"修改角色\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //删除角色\r\n        async delrole({ dispatch }, { id, pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.delrole({ id })\r\n                if (res.code === 200) {\r\n                    Message.success(res.msg)\r\n                    dispatch(\"role\", {\r\n                        pageNo, pageSize\r\n                    })\r\n                } else {\r\n                    Message.error(\"删除失败\")\r\n                }\r\n                console.log(res, \"删除角色\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //分配权限\r\n        async getAssign({ dispatch }, { roleId, peris,pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.getAssign({ roleId, peris })\r\n                if(res.code === 200){\r\n                    Message.success(res.msg)\r\n                    dispatch(\"role\", {\r\n                        pageNo, pageSize\r\n                    })\r\n                }else if(res.code === 401){\r\n                    Message.error(res.msg)\r\n                }\r\n                console.log(res, \"分配权限\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        // 权限菜单\r\n        async getAllMenu({ commit }) {\r\n            try {\r\n                let res = await api.getAllMenu()\r\n                if (res.code === 200) {\r\n                    // res.data.map(item => {\r\n                    //     if(item.children && item.children.length > 0){\r\n                    //         item.children.map(item1 => {\r\n                    //             if(item1.children && item1.children.length > 0){\r\n                    //                     Vue.set(item2,\"disabled\",true)\r\n                    //             }\r\n                    //         })\r\n                    //     }\r\n                    // })\r\n                    commit(\"setallmenu\", res.data)\r\n                } else if (res.code === 401) {\r\n                    Message.error(res.msg)\r\n                }\r\n                console.log(res, \"权限菜单\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //删除权限菜单\r\n        async del({ dispatch }, { id }) {\r\n            try {\r\n                let res = await api.del({ id })\r\n                if (res.code === 200) {\r\n                    dispatch(\"getAllMenu\")\r\n                    Message.success(res.msg)\r\n                } else if(res.code === 401){\r\n                    Message.error(res.msg)\r\n                }\r\n                console.log(res, \"删除权限列表\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //编辑权限菜单\r\n        async getupdate({ dispatch }, { pname, actionKey, viewPath, icon, ptype, pid, remark, id }) {\r\n            try {\r\n                let res = await api.getupdate({ pname, actionKey, viewPath, icon, ptype, pid, remark, id })\r\n                if (res.code === 200) {\r\n                    Message.success(res.msg)\r\n                    dispatch(\"getAllMenu\")\r\n                } else {\r\n                    Message.error(\"编辑失败\")\r\n                }\r\n                console.log(res, \"编辑权限菜单\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //新增权限菜单\r\n        async addpermissions({ dispatch }, { pname, actionKey, viewPath, icon, ptype, pid, remark }) {\r\n            try {\r\n                let res = await api.addpermissions({ pname, actionKey, viewPath, icon, ptype, pid, remark })\r\n                if(res.code === 200){\r\n                    Message.success(res.msg)\r\n                    dispatch(\"getAllMenu\")\r\n                }\r\n                console.log(res, \"新增权限菜单\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //刷新权限缓存\r\n        async Therefresh({ dispatch }) {\r\n            try {\r\n                let res = await api.Therefresh()\r\n                if(res.code === 200){\r\n                    Message.success(res.msg)\r\n                    dispatch(\"getAllMenu\")\r\n                }else{\r\n                    Message.error(\"同步失败\")\r\n                }\r\n                console.log(res, \"刷新权限缓存\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        // 权限同步\r\n        async synchronous({ commit }) {\r\n            try {\r\n                let res = await api.synchronous()\r\n                if(res.code === 200){\r\n                    Message.success(res.msg)\r\n                }else{\r\n                    Message.error(\"同步失败\")\r\n                }\r\n                console.log(res, \"权限同步\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        // 我的权限\r\n        async mypermissions({ commit }) {\r\n            try {\r\n                let res = await api.mypermissions()\r\n                console.log(res, \"我的权限\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n    }\r\n}"]}]}