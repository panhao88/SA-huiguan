{"remainingRequest":"C:\\work\\workspace\\rock-ui\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\workspace\\rock-ui\\src\\store\\customer\\customer.js","dependencies":[{"path":"C:\\work\\workspace\\rock-ui\\src\\store\\customer\\customer.js","mtime":1611046544392},{"path":"C:\\work\\workspace\\rock-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\workspace\\rock-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L3dvcmsvd29ya3NwYWNlL3JvY2stdWkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIkM6L3dvcmsvd29ya3NwYWNlL3JvY2stdWkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKCnZhciBfc3RhdGU7CgppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7CmltcG9ydCBhcGkgZnJvbSAnLi4vLi4vaHR0cC9hcGknOwppbXBvcnQgcm91dGVyIGZyb20gJy4uLy4uL3JvdXRlcic7CmltcG9ydCB7IE1lc3NhZ2UgfSBmcm9tICdlbGVtZW50LXVpJzsKZXhwb3J0IGRlZmF1bHQgewogIC8vIOW8gOWQr+WRveWQjeepuumXtCzov5nkuKrmlofku7blsLHmmK/ljZXni6znmoTkuIDkuKp2dWV455qE5qih5Z2XCiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogKF9zdGF0ZSA9IHsKICAgIGxpc3Q6IFtdLAogICAgLy/lrqLmiLfliJfooagKICAgIHNvdWVjZWxpc3Q6IFtdLAogICAgLy/lrqLmiLfmnaXmupDliJfooagKICAgIHRhbFJvdzogMCwKICAgIC8v5a6i5oi35YiX6KGo5oC75pWwCiAgICB0b3RhbFJvdzogMCwKICAgIC8v5a6i5oi35p2l5rqQ5oC75pWwCiAgICBhZHZpc29yeTogW10sCiAgICAvL+WSqOivouaWueW8j+WIl+ihqAogICAgc3VtOiAwLAogICAgLy/lkqjor6LmlrnlvI/mgLvmlbAKICAgIGxpc3R0eXBlOiBbXSwKICAgIC8v5a6i5oi357G75Yir5YiX6KGoCiAgICB0YXN1bTogMCwKICAgIC8vIOWuouaIt+exu+WIq+aAu+aVsAogICAgY3VzdG9tZXJUeXBsaXN0OiBbXSwKICAgIC8v5a6i5oi357G75Z6L5YiX6KGoCiAgICB0b3RhbDogMCwKICAgIC8v5a6i5oi357G75Z6L5oC75pWwCiAgICBvYmpkZXRhaWw6IHt9LAogICAgLy/lrqLmiLfor6bmg4UKICAgIGNvbnRhY3RzOiBbXSwKICAgIC8v5a6i5oi36IGU57O75Lq65YiX6KGoCiAgICBzcGVjaWFsdHk6IFtdCiAgfSwgX2RlZmluZVByb3BlcnR5KF9zdGF0ZSwgInRvdGFsIiwgMCksIF9kZWZpbmVQcm9wZXJ0eShfc3RhdGUsICJlZHVjYXRpb25saXN0IiwgW10pLCBfZGVmaW5lUHJvcGVydHkoX3N0YXRlLCAidG9hbGFsbCIsIDApLCBfZGVmaW5lUHJvcGVydHkoX3N0YXRlLCAiY2FtcHVzbGlzdEwiLCBbXSksIF9kZWZpbmVQcm9wZXJ0eShfc3RhdGUsICJ0b3RhbFJvd3AiLCAwKSwgX3N0YXRlKSwKICBtdXRhdGlvbnM6IHsKICAgIC8v5a6i5oi35YiX6KGoCiAgICBzZXR1c2VybGlzdDogZnVuY3Rpb24gc2V0dXNlcmxpc3Qoc3RhdGUsIGRhdGEpIHsKICAgICAgc3RhdGUubGlzdCA9IGRhdGE7CiAgICB9LAogICAgLy/lrqLmiLfliJfooajmgLvmlbAKICAgIHNldHRvdGFsUm93OiBmdW5jdGlvbiBzZXR0b3RhbFJvdyhzdGF0ZSwgZGF0YSkgewogICAgICBzdGF0ZS50YWxSb3cgPSBkYXRhOwogICAgfSwKICAgIC8vIOWuouaIt+adpea6kOWIl+ihqAogICAgc2V0c291ZWNlOiBmdW5jdGlvbiBzZXRzb3VlY2Uoc3RhdGUsIGRhdGEpIHsKICAgICAgc3RhdGUuc291ZWNlbGlzdCA9IGRhdGE7CiAgICB9LAogICAgLy/lrqLmiLfmnaXmupDmgLvmlbAKICAgIHNldHRvdGFsUm93czogZnVuY3Rpb24gc2V0dG90YWxSb3dzKHN0YXRlLCBkYXRhKSB7CiAgICAgIHN0YXRlLnRvdGFsUm93ID0gZGF0YTsKICAgIH0sCiAgICAvL+WSqOivouaWueW8j+WIl+ihqAogICAgc2V0YWR2aXNvcnk6IGZ1bmN0aW9uIHNldGFkdmlzb3J5KHN0YXRlLCBkYXRhKSB7CiAgICAgIHN0YXRlLmFkdmlzb3J5ID0gZGF0YTsKICAgIH0sCiAgICAvL+WSqOivouaWueW8j+aAu+aVsAogICAgc2V0c3VtOiBmdW5jdGlvbiBzZXRzdW0oc3RhdGUsIGRhdGEpIHsKICAgICAgc3RhdGUuc3VtID0gZGF0YTsKICAgIH0sCiAgICAvL+WuouaIt+exu+WIq+WIl+ihqAogICAgc2V0dHlwZTogZnVuY3Rpb24gc2V0dHlwZShzdGF0ZSwgZGF0YSkgewogICAgICBzdGF0ZS5saXN0dHlwZSA9IGRhdGE7CiAgICB9LAogICAgLy/lrqLmiLfnsbvliKvmnaHmlbAKICAgIHNldG51bWJlcjogZnVuY3Rpb24gc2V0bnVtYmVyKHN0YXRlLCBkYXRhKSB7CiAgICAgIHN0YXRlLnRhc3VtID0gZGF0YTsKICAgIH0sCiAgICAvL+WuouaIt+exu+Wei+WIl+ihqAogICAgc2V0Y3VzdG9tZXJUeXBlOiBmdW5jdGlvbiBzZXRjdXN0b21lclR5cGUoc3RhdGUsIGRhdGEpIHsKICAgICAgc3RhdGUuY3VzdG9tZXJUeXBsaXN0ID0gZGF0YTsKICAgIH0sCiAgICAvL+WuouaIt+exu+Wei+aAu+aVsAogICAgc2V0c2h1OiBmdW5jdGlvbiBzZXRzaHUoc3RhdGUsIGRhdGEpIHsKICAgICAgc3RhdGUudG90YWwgPSBkYXRhOwogICAgfSwKICAgIC8v5a6i5oi36K+m5oOFCiAgICBzZXRkZXRhaWxzOiBmdW5jdGlvbiBzZXRkZXRhaWxzKHN0YXRlLCBkYXRhKSB7CiAgICAgIHN0YXRlLm9iamRldGFpbCA9IGRhdGE7CiAgICB9LAogICAgLy/lrqLmiLfogZTns7vkuroKICAgIHNldGNvbnRhY3RzOiBmdW5jdGlvbiBzZXRjb250YWN0cyhzdGF0ZSwgZGF0YSkgewogICAgICBzdGF0ZS5jb250YWN0cyA9IGRhdGE7CiAgICB9LAogICAgLy8g5LiT5Lia5L+h5oGv5YiX6KGoCiAgICBzZXRzcGVjaWFsdHk6IGZ1bmN0aW9uIHNldHNwZWNpYWx0eShzdGF0ZSwgZGF0YSkgewogICAgICBzdGF0ZS5zcGVjaWFsdHkgPSBkYXRhOwogICAgfSwKICAgIC8vIOS4k+S4muS/oeaBr+WIl+ihqOaAu+aVsAogICAgc2V0dG90YWw6IGZ1bmN0aW9uIHNldHRvdGFsKHN0YXRlLCBkYXRhKSB7CiAgICAgIHN0YXRlLnRvdGFsID0gZGF0YTsKICAgIH0sCiAgICAvL+WtpuWOhuS/oeaBr+WIl+ihqAogICAgc2V0ZWR1Y2F0aW9uOiBmdW5jdGlvbiBzZXRlZHVjYXRpb24oc3RhdGUsIGRhdGEpIHsKICAgICAgc3RhdGUuZWR1Y2F0aW9ubGlzdCA9IGRhdGE7CiAgICB9LAogICAgLy/lrabljobmgLvmlbAKICAgIHNldGFsbDogZnVuY3Rpb24gc2V0YWxsKHN0YXRlLCBkYXRhKSB7CiAgICAgIHN0YXRlLnRvYWxhbGwgPSBkYXRhOwogICAgfSwKICAgIC8v5qCh5Yy65L+h5oGvCiAgICBzZXRjYW1wdXM6IGZ1bmN0aW9uIHNldGNhbXB1cyhzdGF0ZSwgZGF0YSkgewogICAgICBzdGF0ZS5jYW1wdXNsaXN0TCA9IGRhdGE7CiAgICB9LAogICAgLy8g5qCh5Yy65oC75pWwCiAgICBzZXR0b3RhbFJvd3A6IGZ1bmN0aW9uIHNldHRvdGFsUm93cChzdGF0ZSwgZGF0YSkgewogICAgICBzdGF0ZS50b3RhbFJvd3AgPSBkYXRhOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgLy8g5a6i5oi35YiX6KGoCiAgICBnZXRjdXN0b21lcjogZnVuY3Rpb24gZ2V0Y3VzdG9tZXIoX3JlZiwgX3JlZjIpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgY29tbWl0LCBwYWdlTm8sIHBhZ2VTaXplLCBpZCwgbmFtZSwgbW9iaWxlLCB3ZWNoYXQsIHFxLCBhcHBlbGxhdGlvbiwgc2V4LCB2aXNpdG9ydHlwZSwgYWdlLCBzZWFyY2hUZXJtcywgd2Vic2l0ZSwgc2Nob29sLCBlZHVjYXRpb24sIGdyYWR1YXRlZFNjaG9vbCwgcHJvcG9zZWRNYWpvciwgc291cmNlLCBsYXN0QXQsIGN1c3RvbWVyVHlwZSwgcmVtYXJrcywgY3JlYXRlQXQsIGNyZWF0ZUFjLCBzYWxlc21hbiwgc3RhdGUsIGFkdmlzb3J5LCByZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgICAgICBwYWdlTm8gPSBfcmVmMi5wYWdlTm8sIHBhZ2VTaXplID0gX3JlZjIucGFnZVNpemUsIGlkID0gX3JlZjIuaWQsIG5hbWUgPSBfcmVmMi5uYW1lLCBtb2JpbGUgPSBfcmVmMi5tb2JpbGUsIHdlY2hhdCA9IF9yZWYyLndlY2hhdCwgcXEgPSBfcmVmMi5xcSwgYXBwZWxsYXRpb24gPSBfcmVmMi5hcHBlbGxhdGlvbiwgc2V4ID0gX3JlZjIuc2V4LCB2aXNpdG9ydHlwZSA9IF9yZWYyLnZpc2l0b3J0eXBlLCBhZ2UgPSBfcmVmMi5hZ2UsIHNlYXJjaFRlcm1zID0gX3JlZjIuc2VhcmNoVGVybXMsIHdlYnNpdGUgPSBfcmVmMi53ZWJzaXRlLCBzY2hvb2wgPSBfcmVmMi5zY2hvb2wsIGVkdWNhdGlvbiA9IF9yZWYyLmVkdWNhdGlvbiwgZ3JhZHVhdGVkU2Nob29sID0gX3JlZjIuZ3JhZHVhdGVkU2Nob29sLCBwcm9wb3NlZE1ham9yID0gX3JlZjIucHJvcG9zZWRNYWpvciwgc291cmNlID0gX3JlZjIuc291cmNlLCBsYXN0QXQgPSBfcmVmMi5sYXN0QXQsIGN1c3RvbWVyVHlwZSA9IF9yZWYyLmN1c3RvbWVyVHlwZSwgcmVtYXJrcyA9IF9yZWYyLnJlbWFya3MsIGNyZWF0ZUF0ID0gX3JlZjIuY3JlYXRlQXQsIGNyZWF0ZUFjID0gX3JlZjIuY3JlYXRlQWMsIHNhbGVzbWFuID0gX3JlZjIuc2FsZXNtYW4sIHN0YXRlID0gX3JlZjIuc3RhdGUsIGFkdmlzb3J5ID0gX3JlZjIuYWR2aXNvcnk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMjsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIGFwaS5nZXRjdXN0b21lcih7CiAgICAgICAgICAgICAgICAgIHBhZ2VObzogcGFnZU5vLAogICAgICAgICAgICAgICAgICBwYWdlU2l6ZTogcGFnZVNpemUsCiAgICAgICAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgICAgICAgbmFtZTogbmFtZSwKICAgICAgICAgICAgICAgICAgbW9iaWxlOiBtb2JpbGUsCiAgICAgICAgICAgICAgICAgIHdlY2hhdDogd2VjaGF0LAogICAgICAgICAgICAgICAgICBxcTogcXEsCiAgICAgICAgICAgICAgICAgIGFwcGVsbGF0aW9uOiBhcHBlbGxhdGlvbiwKICAgICAgICAgICAgICAgICAgc2V4OiBzZXgsCiAgICAgICAgICAgICAgICAgIHZpc2l0b3J0eXBlOiB2aXNpdG9ydHlwZSwKICAgICAgICAgICAgICAgICAgYWdlOiBhZ2UsCiAgICAgICAgICAgICAgICAgIHNlYXJjaFRlcm1zOiBzZWFyY2hUZXJtcywKICAgICAgICAgICAgICAgICAgd2Vic2l0ZTogd2Vic2l0ZSwKICAgICAgICAgICAgICAgICAgc2Nob29sOiBzY2hvb2wsCiAgICAgICAgICAgICAgICAgIGVkdWNhdGlvbjogZWR1Y2F0aW9uLAogICAgICAgICAgICAgICAgICBncmFkdWF0ZWRTY2hvb2w6IGdyYWR1YXRlZFNjaG9vbCwKICAgICAgICAgICAgICAgICAgcHJvcG9zZWRNYWpvcjogcHJvcG9zZWRNYWpvciwKICAgICAgICAgICAgICAgICAgc291cmNlOiBzb3VyY2UsCiAgICAgICAgICAgICAgICAgIGxhc3RBdDogbGFzdEF0LAogICAgICAgICAgICAgICAgICBjdXN0b21lclR5cGU6IGN1c3RvbWVyVHlwZSwKICAgICAgICAgICAgICAgICAgcmVtYXJrczogcmVtYXJrcywKICAgICAgICAgICAgICAgICAgY3JlYXRlQXQ6IGNyZWF0ZUF0LAogICAgICAgICAgICAgICAgICBjcmVhdGVBYzogY3JlYXRlQWMsCiAgICAgICAgICAgICAgICAgIHNhbGVzbWFuOiBzYWxlc21hbiwKICAgICAgICAgICAgICAgICAgc3RhdGU6IHN0YXRlLAogICAgICAgICAgICAgICAgICBhZHZpc29yeTogYWR2aXNvcnkKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgICAgIGNvbW1pdCgic2V0dXNlcmxpc3QiLCByZXMuZGF0YSk7CiAgICAgICAgICAgICAgICAgIGNvbW1pdCgnc2V0dG90YWxSb3cnLCByZXMudG90YWxSb3cpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oInNob3dib3giLCB0cnVlKTsKICAgICAgICAgICAgICAgICAgTWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMsICLlrqLmiLfliJfooagiKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMzsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDEwOwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgyKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMiwgMTBdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8v57yW6L6R5a6i5oi35YiX6KGoCiAgICB1cGRhdGVjdXN0b21lcjogZnVuY3Rpb24gdXBkYXRlY3VzdG9tZXIoX3JlZjMsIF9yZWY0KSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBkaXNwYXRjaCwgaWQsIG5hbWUsIG1vYmlsZSwgd2VjaGF0LCBxcSwgYXBwZWxsYXRpb24sIHNleCwgYWdlLCBzZWFyY2hUZXJtcywgd2Vic2l0ZSwgc2Nob29sLCBlZHVjYXRpb24sIGdyYWR1YXRlZFNjaG9vbCwgcHJvcG9zZWRNYWpvciwgc291cmNlLCBjdXN0b21lclR5cGUsIHJlbWFya3MsIGNyZWF0ZUFjLCBwYWdlTm8sIHBhZ2VTaXplLCByZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGRpc3BhdGNoID0gX3JlZjMuZGlzcGF0Y2g7CiAgICAgICAgICAgICAgICBpZCA9IF9yZWY0LmlkLCBuYW1lID0gX3JlZjQubmFtZSwgbW9iaWxlID0gX3JlZjQubW9iaWxlLCB3ZWNoYXQgPSBfcmVmNC53ZWNoYXQsIHFxID0gX3JlZjQucXEsIGFwcGVsbGF0aW9uID0gX3JlZjQuYXBwZWxsYXRpb24sIHNleCA9IF9yZWY0LnNleCwgYWdlID0gX3JlZjQuYWdlLCBzZWFyY2hUZXJtcyA9IF9yZWY0LnNlYXJjaFRlcm1zLCB3ZWJzaXRlID0gX3JlZjQud2Vic2l0ZSwgc2Nob29sID0gX3JlZjQuc2Nob29sLCBlZHVjYXRpb24gPSBfcmVmNC5lZHVjYXRpb24sIGdyYWR1YXRlZFNjaG9vbCA9IF9yZWY0LmdyYWR1YXRlZFNjaG9vbCwgcHJvcG9zZWRNYWpvciA9IF9yZWY0LnByb3Bvc2VkTWFqb3IsIHNvdXJjZSA9IF9yZWY0LnNvdXJjZSwgY3VzdG9tZXJUeXBlID0gX3JlZjQuY3VzdG9tZXJUeXBlLCByZW1hcmtzID0gX3JlZjQucmVtYXJrcywgY3JlYXRlQWMgPSBfcmVmNC5jcmVhdGVBYywgcGFnZU5vID0gX3JlZjQucGFnZU5vLCBwYWdlU2l6ZSA9IF9yZWY0LnBhZ2VTaXplOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAyOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIGFwaS51cGRhdGVjdXN0b21lcih7CiAgICAgICAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgICAgICAgbmFtZTogbmFtZSwKICAgICAgICAgICAgICAgICAgbW9iaWxlOiBtb2JpbGUsCiAgICAgICAgICAgICAgICAgIHdlY2hhdDogd2VjaGF0LAogICAgICAgICAgICAgICAgICBxcTogcXEsCiAgICAgICAgICAgICAgICAgIGFwcGVsbGF0aW9uOiBhcHBlbGxhdGlvbiwKICAgICAgICAgICAgICAgICAgc2V4OiBzZXgsCiAgICAgICAgICAgICAgICAgIGFnZTogYWdlLAogICAgICAgICAgICAgICAgICBzZWFyY2hUZXJtczogc2VhcmNoVGVybXMsCiAgICAgICAgICAgICAgICAgIHdlYnNpdGU6IHdlYnNpdGUsCiAgICAgICAgICAgICAgICAgIHNjaG9vbDogc2Nob29sLAogICAgICAgICAgICAgICAgICBlZHVjYXRpb246IGVkdWNhdGlvbiwKICAgICAgICAgICAgICAgICAgZ3JhZHVhdGVkU2Nob29sOiBncmFkdWF0ZWRTY2hvb2wsCiAgICAgICAgICAgICAgICAgIHByb3Bvc2VkTWFqb3I6IHByb3Bvc2VkTWFqb3IsCiAgICAgICAgICAgICAgICAgIHNvdXJjZTogc291cmNlLAogICAgICAgICAgICAgICAgICBjdXN0b21lclR5cGU6IGN1c3RvbWVyVHlwZSwKICAgICAgICAgICAgICAgICAgcmVtYXJrczogcmVtYXJrcywKICAgICAgICAgICAgICAgICAgY3JlYXRlQWM6IGNyZWF0ZUFjCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQyLnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKHJlcy5jb2RlID09PSAyMDApIHsKICAgICAgICAgICAgICAgICAgTWVzc2FnZS5zdWNjZXNzKHJlcy5tc2cpOwogICAgICAgICAgICAgICAgICBkaXNwYXRjaCgiZ2V0Y3VzdG9tZXIiLCB7CiAgICAgICAgICAgICAgICAgICAgcGFnZU5vOiBwYWdlTm8sCiAgICAgICAgICAgICAgICAgICAgcGFnZVNpemU6IHBhZ2VTaXplLAogICAgICAgICAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgICAgICAgICBuYW1lOiBuYW1lLAogICAgICAgICAgICAgICAgICAgIG1vYmlsZTogbW9iaWxlLAogICAgICAgICAgICAgICAgICAgIHdlY2hhdDogd2VjaGF0LAogICAgICAgICAgICAgICAgICAgIHFxOiBxcSwKICAgICAgICAgICAgICAgICAgICBhcHBlbGxhdGlvbjogYXBwZWxsYXRpb24sCiAgICAgICAgICAgICAgICAgICAgc2V4OiBzZXgsCiAgICAgICAgICAgICAgICAgICAgdmlzaXRvcnR5cGU6IHZpc2l0b3J0eXBlLAogICAgICAgICAgICAgICAgICAgIGFnZTogYWdlLAogICAgICAgICAgICAgICAgICAgIHNlYXJjaFRlcm1zOiBzZWFyY2hUZXJtcywKICAgICAgICAgICAgICAgICAgICB3ZWJzaXRlOiB3ZWJzaXRlLAogICAgICAgICAgICAgICAgICAgIHNjaG9vbDogc2Nob29sLAogICAgICAgICAgICAgICAgICAgIGVkdWNhdGlvbjogZWR1Y2F0aW9uLAogICAgICAgICAgICAgICAgICAgIGdyYWR1YXRlZFNjaG9vbDogZ3JhZHVhdGVkU2Nob29sLAogICAgICAgICAgICAgICAgICAgIHByb3Bvc2VkTWFqb3I6IHByb3Bvc2VkTWFqb3IsCiAgICAgICAgICAgICAgICAgICAgc291cmNlOiBzb3VyY2UsCiAgICAgICAgICAgICAgICAgICAgbGFzdEF0OiBsYXN0QXQsCiAgICAgICAgICAgICAgICAgICAgY3VzdG9tZXJUeXBlOiBjdXN0b21lclR5cGUsCiAgICAgICAgICAgICAgICAgICAgcmVtYXJrczogcmVtYXJrcywKICAgICAgICAgICAgICAgICAgICBjcmVhdGVBdDogY3JlYXRlQXQsCiAgICAgICAgICAgICAgICAgICAgY3JlYXRlQWM6IGNyZWF0ZUFjLAogICAgICAgICAgICAgICAgICAgIHNhbGVzbWFuOiBzYWxlc21hbiwKICAgICAgICAgICAgICAgICAgICBzdGF0ZTogc3RhdGUsCiAgICAgICAgICAgICAgICAgICAgYWR2aXNvcnk6IGFkdmlzb3J5CiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgTWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDEyOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gOTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSgyKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0Mi50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIsIG51bGwsIFtbMiwgOV1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy8g5paw5aKe5a6i5oi35YiX6KGoCiAgICBhZGRjdXN0b21lcjogZnVuY3Rpb24gYWRkY3VzdG9tZXIoX3JlZjUsIF9yZWY2KSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHZhciBkaXNwYXRjaCwgbmFtZSwgbW9iaWxlLCB3ZWNoYXQsIHFxLCBhcHBlbGxhdGlvbiwgc2V4LCBhZ2UsIHNlYXJjaFRlcm1zLCB3ZWJzaXRlLCBzY2hvb2wsIGVkdWNhdGlvbiwgZ3JhZHVhdGVkU2Nob29sLCBwcm9wb3NlZE1ham9yLCBzb3VyY2UsIGN1c3RvbWVyVHlwZSwgcmVtYXJrcywgY3JlYXRlQWMsIHBhZ2VObywgcGFnZVNpemUsIHJlczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZGlzcGF0Y2ggPSBfcmVmNS5kaXNwYXRjaDsKICAgICAgICAgICAgICAgIG5hbWUgPSBfcmVmNi5uYW1lLCBtb2JpbGUgPSBfcmVmNi5tb2JpbGUsIHdlY2hhdCA9IF9yZWY2LndlY2hhdCwgcXEgPSBfcmVmNi5xcSwgYXBwZWxsYXRpb24gPSBfcmVmNi5hcHBlbGxhdGlvbiwgc2V4ID0gX3JlZjYuc2V4LCBhZ2UgPSBfcmVmNi5hZ2UsIHNlYXJjaFRlcm1zID0gX3JlZjYuc2VhcmNoVGVybXMsIHdlYnNpdGUgPSBfcmVmNi53ZWJzaXRlLCBzY2hvb2wgPSBfcmVmNi5zY2hvb2wsIGVkdWNhdGlvbiA9IF9yZWY2LmVkdWNhdGlvbiwgZ3JhZHVhdGVkU2Nob29sID0gX3JlZjYuZ3JhZHVhdGVkU2Nob29sLCBwcm9wb3NlZE1ham9yID0gX3JlZjYucHJvcG9zZWRNYWpvciwgc291cmNlID0gX3JlZjYuc291cmNlLCBjdXN0b21lclR5cGUgPSBfcmVmNi5jdXN0b21lclR5cGUsIHJlbWFya3MgPSBfcmVmNi5yZW1hcmtzLCBjcmVhdGVBYyA9IF9yZWY2LmNyZWF0ZUFjLCBwYWdlTm8gPSBfcmVmNi5wYWdlTm8sIHBhZ2VTaXplID0gX3JlZjYucGFnZVNpemU7CiAgICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDI7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gYXBpLmFkZGN1c3RvbWVyKHsKICAgICAgICAgICAgICAgICAgbmFtZTogbmFtZSwKICAgICAgICAgICAgICAgICAgbW9iaWxlOiBtb2JpbGUsCiAgICAgICAgICAgICAgICAgIHdlY2hhdDogd2VjaGF0LAogICAgICAgICAgICAgICAgICBxcTogcXEsCiAgICAgICAgICAgICAgICAgIGFwcGVsbGF0aW9uOiBhcHBlbGxhdGlvbiwKICAgICAgICAgICAgICAgICAgc2V4OiBzZXgsCiAgICAgICAgICAgICAgICAgIGFnZTogYWdlLAogICAgICAgICAgICAgICAgICBzZWFyY2hUZXJtczogc2VhcmNoVGVybXMsCiAgICAgICAgICAgICAgICAgIHdlYnNpdGU6IHdlYnNpdGUsCiAgICAgICAgICAgICAgICAgIHNjaG9vbDogc2Nob29sLAogICAgICAgICAgICAgICAgICBlZHVjYXRpb246IGVkdWNhdGlvbiwKICAgICAgICAgICAgICAgICAgZ3JhZHVhdGVkU2Nob29sOiBncmFkdWF0ZWRTY2hvb2wsCiAgICAgICAgICAgICAgICAgIHByb3Bvc2VkTWFqb3I6IHByb3Bvc2VkTWFqb3IsCiAgICAgICAgICAgICAgICAgIHNvdXJjZTogc291cmNlLAogICAgICAgICAgICAgICAgICBjdXN0b21lclR5cGU6IGN1c3RvbWVyVHlwZSwKICAgICAgICAgICAgICAgICAgcmVtYXJrczogcmVtYXJrcywKICAgICAgICAgICAgICAgICAgY3JlYXRlQWM6IGNyZWF0ZUFjCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQzLnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKHJlcy5jb2RlID09PSAyMDApIHsKICAgICAgICAgICAgICAgICAgZGlzcGF0Y2goImdldGN1c3RvbWVyIiwgewogICAgICAgICAgICAgICAgICAgIHBhZ2VObzogcGFnZU5vLAogICAgICAgICAgICAgICAgICAgIHBhZ2VTaXplOiBwYWdlU2l6ZSwKICAgICAgICAgICAgICAgICAgICBpZDogaWQsCiAgICAgICAgICAgICAgICAgICAgbmFtZTogbmFtZSwKICAgICAgICAgICAgICAgICAgICBtb2JpbGU6IG1vYmlsZSwKICAgICAgICAgICAgICAgICAgICB3ZWNoYXQ6IHdlY2hhdCwKICAgICAgICAgICAgICAgICAgICBxcTogcXEsCiAgICAgICAgICAgICAgICAgICAgYXBwZWxsYXRpb246IGFwcGVsbGF0aW9uLAogICAgICAgICAgICAgICAgICAgIHNleDogc2V4LAogICAgICAgICAgICAgICAgICAgIHZpc2l0b3J0eXBlOiB2aXNpdG9ydHlwZSwKICAgICAgICAgICAgICAgICAgICBhZ2U6IGFnZSwKICAgICAgICAgICAgICAgICAgICBzZWFyY2hUZXJtczogc2VhcmNoVGVybXMsCiAgICAgICAgICAgICAgICAgICAgd2Vic2l0ZTogd2Vic2l0ZSwKICAgICAgICAgICAgICAgICAgICBzY2hvb2w6IHNjaG9vbCwKICAgICAgICAgICAgICAgICAgICBlZHVjYXRpb246IGVkdWNhdGlvbiwKICAgICAgICAgICAgICAgICAgICBncmFkdWF0ZWRTY2hvb2w6IGdyYWR1YXRlZFNjaG9vbCwKICAgICAgICAgICAgICAgICAgICBwcm9wb3NlZE1ham9yOiBwcm9wb3NlZE1ham9yLAogICAgICAgICAgICAgICAgICAgIHNvdXJjZTogc291cmNlLAogICAgICAgICAgICAgICAgICAgIGxhc3RBdDogbGFzdEF0LAogICAgICAgICAgICAgICAgICAgIGN1c3RvbWVyVHlwZTogY3VzdG9tZXJUeXBlLAogICAgICAgICAgICAgICAgICAgIHJlbWFya3M6IHJlbWFya3MsCiAgICAgICAgICAgICAgICAgICAgY3JlYXRlQXQ6IGNyZWF0ZUF0LAogICAgICAgICAgICAgICAgICAgIGNyZWF0ZUFjOiBjcmVhdGVBYywKICAgICAgICAgICAgICAgICAgICBzYWxlc21hbjogc2FsZXNtYW4sCiAgICAgICAgICAgICAgICAgICAgc3RhdGU6IHN0YXRlLAogICAgICAgICAgICAgICAgICAgIGFkdmlzb3J5OiBhZHZpc29yeQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgTWVzc2FnZS5zdWNjZXNzKHJlcy5tc2cpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgTWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMsICLlrqLmiLfmlrDlop4iKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMTA7CiAgICAgICAgICAgICAgICBfY29udGV4dDMudDAgPSBfY29udGV4dDNbImNhdGNoIl0oMik7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDMudDApOwoKICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzLCBudWxsLCBbWzIsIDEwXV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvL+WuouaIt+i9rOWFpeWFrOa1twogICAgZ2V0aW50b1B1YmxpY1NlYTogZnVuY3Rpb24gZ2V0aW50b1B1YmxpY1NlYShfcmVmNywgX3JlZjgpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7CiAgICAgICAgdmFyIGRpc3BhdGNoLCBpZHMsIHBhZ2VObywgcGFnZVNpemUsIHJlczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZGlzcGF0Y2ggPSBfcmVmNy5kaXNwYXRjaDsKICAgICAgICAgICAgICAgIGlkcyA9IF9yZWY4LmlkcywgcGFnZU5vID0gX3JlZjgucGFnZU5vLCBwYWdlU2l6ZSA9IF9yZWY4LnBhZ2VTaXplOwogICAgICAgICAgICAgICAgX2NvbnRleHQ0LnByZXYgPSAyOwogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIGFwaS5nZXRpbnRvUHVibGljU2VhKHsKICAgICAgICAgICAgICAgICAgaWRzOiBpZHMKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDQuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAocmVzLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgICAgICAgICBkaXNwYXRjaCgiZ2V0Y3VzdG9tZXIiLCB7CiAgICAgICAgICAgICAgICAgICAgcGFnZU5vOiBwYWdlTm8sCiAgICAgICAgICAgICAgICAgICAgcGFnZVNpemU6IHBhZ2VTaXplLAogICAgICAgICAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgICAgICAgICBuYW1lOiBuYW1lLAogICAgICAgICAgICAgICAgICAgIG1vYmlsZTogbW9iaWxlLAogICAgICAgICAgICAgICAgICAgIHdlY2hhdDogd2VjaGF0LAogICAgICAgICAgICAgICAgICAgIHFxOiBxcSwKICAgICAgICAgICAgICAgICAgICBhcHBlbGxhdGlvbjogYXBwZWxsYXRpb24sCiAgICAgICAgICAgICAgICAgICAgc2V4OiBzZXgsCiAgICAgICAgICAgICAgICAgICAgdmlzaXRvcnR5cGU6IHZpc2l0b3J0eXBlLAogICAgICAgICAgICAgICAgICAgIGFnZTogYWdlLAogICAgICAgICAgICAgICAgICAgIHNlYXJjaFRlcm1zOiBzZWFyY2hUZXJtcywKICAgICAgICAgICAgICAgICAgICB3ZWJzaXRlOiB3ZWJzaXRlLAogICAgICAgICAgICAgICAgICAgIHNjaG9vbDogc2Nob29sLAogICAgICAgICAgICAgICAgICAgIGVkdWNhdGlvbjogZWR1Y2F0aW9uLAogICAgICAgICAgICAgICAgICAgIGdyYWR1YXRlZFNjaG9vbDogZ3JhZHVhdGVkU2Nob29sLAogICAgICAgICAgICAgICAgICAgIHByb3Bvc2VkTWFqb3I6IHByb3Bvc2VkTWFqb3IsCiAgICAgICAgICAgICAgICAgICAgc291cmNlOiBzb3VyY2UsCiAgICAgICAgICAgICAgICAgICAgbGFzdEF0OiBsYXN0QXQsCiAgICAgICAgICAgICAgICAgICAgY3VzdG9tZXJUeXBlOiBjdXN0b21lclR5cGUsCiAgICAgICAgICAgICAgICAgICAgcmVtYXJrczogcmVtYXJrcywKICAgICAgICAgICAgICAgICAgICBjcmVhdGVBdDogY3JlYXRlQXQsCiAgICAgICAgICAgICAgICAgICAgY3JlYXRlQWM6IGNyZWF0ZUFjLAogICAgICAgICAgICAgICAgICAgIHNhbGVzbWFuOiBzYWxlc21hbiwKICAgICAgICAgICAgICAgICAgICBzdGF0ZTogc3RhdGUsCiAgICAgICAgICAgICAgICAgICAgYWR2aXNvcnk6IGFkdmlzb3J5CiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICBNZXNzYWdlLnN1Y2Nlc3MocmVzLm1zZyk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBNZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcywgIuWuouaIt+i9rOWFpeWFrOa1tyIpOwogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAxMzsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgICAgX2NvbnRleHQ0LnByZXYgPSAxMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0NC50MCA9IF9jb250ZXh0NFsiY2F0Y2giXSgyKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0NC50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTQsIG51bGwsIFtbMiwgMTBdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8v5a6i5oi36L2s56e7CiAgICBnZXR0cmFuc2ZlcjogZnVuY3Rpb24gZ2V0dHJhbnNmZXIoX3JlZjksIF9yZWYxMCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNSgpIHsKICAgICAgICB2YXIgZGlzcGF0Y2gsIGlkcywgYWNjb3VudElkLCBwYWdlTm8sIHBhZ2VTaXplLCByZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU1JChfY29udGV4dDUpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ1LnByZXYgPSBfY29udGV4dDUubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGRpc3BhdGNoID0gX3JlZjkuZGlzcGF0Y2g7CiAgICAgICAgICAgICAgICBpZHMgPSBfcmVmMTAuaWRzLCBhY2NvdW50SWQgPSBfcmVmMTAuYWNjb3VudElkLCBwYWdlTm8gPSBfcmVmMTAucGFnZU5vLCBwYWdlU2l6ZSA9IF9yZWYxMC5wYWdlU2l6ZTsKICAgICAgICAgICAgICAgIF9jb250ZXh0NS5wcmV2ID0gMjsKICAgICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBhcGkuZ2V0dHJhbnNmZXIoewogICAgICAgICAgICAgICAgICBpZHM6IGlkcywKICAgICAgICAgICAgICAgICAgYWNjb3VudElkOiBhY2NvdW50SWQKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDUuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAocmVzLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgICAgICAgICBkaXNwYXRjaCgiZ2V0Y3VzdG9tZXIiLCB7CiAgICAgICAgICAgICAgICAgICAgcGFnZU5vOiBwYWdlTm8sCiAgICAgICAgICAgICAgICAgICAgcGFnZVNpemU6IHBhZ2VTaXplLAogICAgICAgICAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgICAgICAgICBuYW1lOiBuYW1lLAogICAgICAgICAgICAgICAgICAgIG1vYmlsZTogbW9iaWxlLAogICAgICAgICAgICAgICAgICAgIHdlY2hhdDogd2VjaGF0LAogICAgICAgICAgICAgICAgICAgIHFxOiBxcSwKICAgICAgICAgICAgICAgICAgICBhcHBlbGxhdGlvbjogYXBwZWxsYXRpb24sCiAgICAgICAgICAgICAgICAgICAgc2V4OiBzZXgsCiAgICAgICAgICAgICAgICAgICAgdmlzaXRvcnR5cGU6IHZpc2l0b3J0eXBlLAogICAgICAgICAgICAgICAgICAgIGFnZTogYWdlLAogICAgICAgICAgICAgICAgICAgIHNlYXJjaFRlcm1zOiBzZWFyY2hUZXJtcywKICAgICAgICAgICAgICAgICAgICB3ZWJzaXRlOiB3ZWJzaXRlLAogICAgICAgICAgICAgICAgICAgIHNjaG9vbDogc2Nob29sLAogICAgICAgICAgICAgICAgICAgIGVkdWNhdGlvbjogZWR1Y2F0aW9uLAogICAgICAgICAgICAgICAgICAgIGdyYWR1YXRlZFNjaG9vbDogZ3JhZHVhdGVkU2Nob29sLAogICAgICAgICAgICAgICAgICAgIHByb3Bvc2VkTWFqb3I6IHByb3Bvc2VkTWFqb3IsCiAgICAgICAgICAgICAgICAgICAgc291cmNlOiBzb3VyY2UsCiAgICAgICAgICAgICAgICAgICAgbGFzdEF0OiBsYXN0QXQsCiAgICAgICAgICAgICAgICAgICAgY3VzdG9tZXJUeXBlOiBjdXN0b21lclR5cGUsCiAgICAgICAgICAgICAgICAgICAgcmVtYXJrczogcmVtYXJrcywKICAgICAgICAgICAgICAgICAgICBjcmVhdGVBdDogY3JlYXRlQXQsCiAgICAgICAgICAgICAgICAgICAgY3JlYXRlQWM6IGNyZWF0ZUFjLAogICAgICAgICAgICAgICAgICAgIHNhbGVzbWFuOiBzYWxlc21hbiwKICAgICAgICAgICAgICAgICAgICBzdGF0ZTogc3RhdGUsCiAgICAgICAgICAgICAgICAgICAgYWR2aXNvcnk6IGFkdmlzb3J5CiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICBNZXNzYWdlLnN1Y2Nlc3MocmVzLm1zZyk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBNZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgX2NvbnRleHQ1LnByZXYgPSA5OwogICAgICAgICAgICAgICAgX2NvbnRleHQ1LnQwID0gX2NvbnRleHQ1WyJjYXRjaCJdKDIpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQ1LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNSwgbnVsbCwgW1syLCA5XV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvL+WuouaIt+aTjee6teiusOW9lQogICAgZ2V0b3BlcmF0aW9uUmVjb3JkOiBmdW5jdGlvbiBnZXRvcGVyYXRpb25SZWNvcmQoX3JlZjExLCBfcmVmMTIpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTYoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgY2lkLCBwYWdlTm8sIHBhZ2VTaXplLCByZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU2JChfY29udGV4dDYpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ2LnByZXYgPSBfY29udGV4dDYubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYxMS5jb21taXQ7CiAgICAgICAgICAgICAgICBjaWQgPSBfcmVmMTIuY2lkLCBwYWdlTm8gPSBfcmVmMTIucGFnZU5vLCBwYWdlU2l6ZSA9IF9yZWYxMi5wYWdlU2l6ZTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Ni5wcmV2ID0gMjsKICAgICAgICAgICAgICAgIF9jb250ZXh0Ni5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBhcGkuZ2V0b3BlcmF0aW9uUmVjb3JkKHsKICAgICAgICAgICAgICAgICAgY2lkOiBjaWQKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDYuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAocmVzLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgICAgICAgICBkaXNwYXRjaCgiZ2V0Y3VzdG9tZXIiLCB7CiAgICAgICAgICAgICAgICAgICAgcGFnZU5vOiBwYWdlTm8sCiAgICAgICAgICAgICAgICAgICAgcGFnZVNpemU6IHBhZ2VTaXplLAogICAgICAgICAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgICAgICAgICBuYW1lOiBuYW1lLAogICAgICAgICAgICAgICAgICAgIG1vYmlsZTogbW9iaWxlLAogICAgICAgICAgICAgICAgICAgIHdlY2hhdDogd2VjaGF0LAogICAgICAgICAgICAgICAgICAgIHFxOiBxcSwKICAgICAgICAgICAgICAgICAgICBhcHBlbGxhdGlvbjogYXBwZWxsYXRpb24sCiAgICAgICAgICAgICAgICAgICAgc2V4OiBzZXgsCiAgICAgICAgICAgICAgICAgICAgdmlzaXRvcnR5cGU6IHZpc2l0b3J0eXBlLAogICAgICAgICAgICAgICAgICAgIGFnZTogYWdlLAogICAgICAgICAgICAgICAgICAgIHNlYXJjaFRlcm1zOiBzZWFyY2hUZXJtcywKICAgICAgICAgICAgICAgICAgICB3ZWJzaXRlOiB3ZWJzaXRlLAogICAgICAgICAgICAgICAgICAgIHNjaG9vbDogc2Nob29sLAogICAgICAgICAgICAgICAgICAgIGVkdWNhdGlvbjogZWR1Y2F0aW9uLAogICAgICAgICAgICAgICAgICAgIGdyYWR1YXRlZFNjaG9vbDogZ3JhZHVhdGVkU2Nob29sLAogICAgICAgICAgICAgICAgICAgIHByb3Bvc2VkTWFqb3I6IHByb3Bvc2VkTWFqb3IsCiAgICAgICAgICAgICAgICAgICAgc291cmNlOiBzb3VyY2UsCiAgICAgICAgICAgICAgICAgICAgbGFzdEF0OiBsYXN0QXQsCiAgICAgICAgICAgICAgICAgICAgY3VzdG9tZXJUeXBlOiBjdXN0b21lclR5cGUsCiAgICAgICAgICAgICAgICAgICAgcmVtYXJrczogcmVtYXJrcywKICAgICAgICAgICAgICAgICAgICBjcmVhdGVBdDogY3JlYXRlQXQsCiAgICAgICAgICAgICAgICAgICAgY3JlYXRlQWM6IGNyZWF0ZUFjLAogICAgICAgICAgICAgICAgICAgIHNhbGVzbWFuOiBzYWxlc21hbiwKICAgICAgICAgICAgICAgICAgICBzdGF0ZTogc3RhdGUsCiAgICAgICAgICAgICAgICAgICAgYWR2aXNvcnk6IGFkdmlzb3J5CiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICBNZXNzYWdlLnN1Y2Nlc3MocmVzLm1zZyk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBNZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcywgIuWuouaIt+aTjee6teiusOW9lSIpOwogICAgICAgICAgICAgICAgX2NvbnRleHQ2Lm5leHQgPSAxMzsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgICAgX2NvbnRleHQ2LnByZXYgPSAxMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Ni50MCA9IF9jb250ZXh0NlsiY2F0Y2giXSgyKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0Ni50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDYuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTYsIG51bGwsIFtbMiwgMTBdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8v5Yig6Zmk5a6i5oi35YiX6KGoCiAgICBkZWxjdXN0b21lcjogZnVuY3Rpb24gZGVsY3VzdG9tZXIoX3JlZjEzLCBfcmVmMTQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTcoKSB7CiAgICAgICAgdmFyIGRpc3BhdGNoLCBpZCwgcGFnZU5vLCBwYWdlU2l6ZSwgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNyQoX2NvbnRleHQ3KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Ny5wcmV2ID0gX2NvbnRleHQ3Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBkaXNwYXRjaCA9IF9yZWYxMy5kaXNwYXRjaDsKICAgICAgICAgICAgICAgIGlkID0gX3JlZjE0LmlkLCBwYWdlTm8gPSBfcmVmMTQucGFnZU5vLCBwYWdlU2l6ZSA9IF9yZWYxNC5wYWdlU2l6ZTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Ny5wcmV2ID0gMjsKICAgICAgICAgICAgICAgIF9jb250ZXh0Ny5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBhcGkuZGVsY3VzdG9tZXIoewogICAgICAgICAgICAgICAgICBpZDogaWQKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDcuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAocmVzLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgICAgICAgICBkaXNwYXRjaCgiZ2V0Y3VzdG9tZXIiLCB7CiAgICAgICAgICAgICAgICAgICAgcGFnZU5vOiBwYWdlTm8sCiAgICAgICAgICAgICAgICAgICAgcGFnZVNpemU6IHBhZ2VTaXplLAogICAgICAgICAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgICAgICAgICBuYW1lOiBuYW1lLAogICAgICAgICAgICAgICAgICAgIG1vYmlsZTogbW9iaWxlLAogICAgICAgICAgICAgICAgICAgIHdlY2hhdDogd2VjaGF0LAogICAgICAgICAgICAgICAgICAgIHFxOiBxcSwKICAgICAgICAgICAgICAgICAgICBhcHBlbGxhdGlvbjogYXBwZWxsYXRpb24sCiAgICAgICAgICAgICAgICAgICAgc2V4OiBzZXgsCiAgICAgICAgICAgICAgICAgICAgdmlzaXRvcnR5cGU6IHZpc2l0b3J0eXBlLAogICAgICAgICAgICAgICAgICAgIGFnZTogYWdlLAogICAgICAgICAgICAgICAgICAgIHNlYXJjaFRlcm1zOiBzZWFyY2hUZXJtcywKICAgICAgICAgICAgICAgICAgICB3ZWJzaXRlOiB3ZWJzaXRlLAogICAgICAgICAgICAgICAgICAgIHNjaG9vbDogc2Nob29sLAogICAgICAgICAgICAgICAgICAgIGVkdWNhdGlvbjogZWR1Y2F0aW9uLAogICAgICAgICAgICAgICAgICAgIGdyYWR1YXRlZFNjaG9vbDogZ3JhZHVhdGVkU2Nob29sLAogICAgICAgICAgICAgICAgICAgIHByb3Bvc2VkTWFqb3I6IHByb3Bvc2VkTWFqb3IsCiAgICAgICAgICAgICAgICAgICAgc291cmNlOiBzb3VyY2UsCiAgICAgICAgICAgICAgICAgICAgbGFzdEF0OiBsYXN0QXQsCiAgICAgICAgICAgICAgICAgICAgY3VzdG9tZXJUeXBlOiBjdXN0b21lclR5cGUsCiAgICAgICAgICAgICAgICAgICAgcmVtYXJrczogcmVtYXJrcywKICAgICAgICAgICAgICAgICAgICBjcmVhdGVBdDogY3JlYXRlQXQsCiAgICAgICAgICAgICAgICAgICAgY3JlYXRlQWM6IGNyZWF0ZUFjLAogICAgICAgICAgICAgICAgICAgIHNhbGVzbWFuOiBzYWxlc21hbiwKICAgICAgICAgICAgICAgICAgICBzdGF0ZTogc3RhdGUsCiAgICAgICAgICAgICAgICAgICAgYWR2aXNvcnk6IGFkdmlzb3J5CiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICBNZXNzYWdlLnN1Y2Nlc3MocmVzLm1zZyk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBNZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcywgIuWuouaIt+WIoOmZpCIpOwogICAgICAgICAgICAgICAgX2NvbnRleHQ3Lm5leHQgPSAxMzsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgICAgX2NvbnRleHQ3LnByZXYgPSAxMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Ny50MCA9IF9jb250ZXh0N1siY2F0Y2giXSgyKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0Ny50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDcuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTcsIG51bGwsIFtbMiwgMTBdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8v5a6i5oi36K+m5oOF5L+h5oGvCiAgICBnZXRkZXRhaWxzOiBmdW5jdGlvbiBnZXRkZXRhaWxzKF9yZWYxNSwgX3JlZjE2KSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU4KCkgewogICAgICAgIHZhciBjb21taXQsIGlkLCByZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU4JChfY29udGV4dDgpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ4LnByZXYgPSBfY29udGV4dDgubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYxNS5jb21taXQ7CiAgICAgICAgICAgICAgICBpZCA9IF9yZWYxNi5pZDsKICAgICAgICAgICAgICAgIF9jb250ZXh0OC5wcmV2ID0gMjsKICAgICAgICAgICAgICAgIF9jb250ZXh0OC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBhcGkuZ2V0ZGV0YWlscyh7CiAgICAgICAgICAgICAgICAgIGlkOiBpZAogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0OC5zZW50OwogICAgICAgICAgICAgICAgY29tbWl0KCJzZXRkZXRhaWxzIiwgcmVzLmRhdGEpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzLCAi5a6i5oi36K+m5oOF5L+h5oGvIik7CiAgICAgICAgICAgICAgICBfY29udGV4dDgubmV4dCA9IDEzOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBfY29udGV4dDgucHJldiA9IDEwOwogICAgICAgICAgICAgICAgX2NvbnRleHQ4LnQwID0gX2NvbnRleHQ4WyJjYXRjaCJdKDIpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQ4LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0OC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlOCwgbnVsbCwgW1syLCAxMF1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy/lrqLmiLfogZTns7vkuroKICAgIGdldGNvbnRhY3RzOiBmdW5jdGlvbiBnZXRjb250YWN0cyhfcmVmMTcsIF9yZWYxOCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlOSgpIHsKICAgICAgICB2YXIgY29tbWl0LCBjaWQsIHJlczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTkkKF9jb250ZXh0OSkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDkucHJldiA9IF9jb250ZXh0OS5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjE3LmNvbW1pdDsKICAgICAgICAgICAgICAgIGNpZCA9IF9yZWYxOC5jaWQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDkucHJldiA9IDI7CiAgICAgICAgICAgICAgICBfY29udGV4dDkubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gYXBpLmdldGNvbnRhY3RzKHsKICAgICAgICAgICAgICAgICAgY2lkOiBjaWQKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDkuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAocmVzLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgICAgICAgICByZXMuZGF0YS5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgICAgICAgICBpZiAoaXRlbS5zZXggPT09IDApIHsKICAgICAgICAgICAgICAgICAgICAgIGl0ZW0uc2V4ID0gIuWlsyI7CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICBpZiAoaXRlbS5zZXggPT09IDEpIHsKICAgICAgICAgICAgICAgICAgICAgIGl0ZW0uc2V4ID0gIueUtyI7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgY29tbWl0KCJzZXRjb250YWN0cyIsIHJlcy5kYXRhKTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIE1lc3NhZ2UuZXJyb3IocmVzLm1zZyk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzLCAi6IGU57O75Lq6Iik7CiAgICAgICAgICAgICAgICBfY29udGV4dDkubmV4dCA9IDEzOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBfY29udGV4dDkucHJldiA9IDEwOwogICAgICAgICAgICAgICAgX2NvbnRleHQ5LnQwID0gX2NvbnRleHQ5WyJjYXRjaCJdKDIpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQ5LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0OS5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlOSwgbnVsbCwgW1syLCAxMF1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy/lrqLmiLfogZTns7vkurrmlrDlop4KICAgIGFkZGN1c3RvbWVyQ29udGFjdDogZnVuY3Rpb24gYWRkY3VzdG9tZXJDb250YWN0KF9yZWYxOSwgX3JlZjIwKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxMCgpIHsKICAgICAgICB2YXIgZGlzcGF0Y2gsIGNpZCwgbmFtZSwgcGhvbmUsIHNleCwgYWdlLCB3ZWNoYXQsIHFxLCBhZGRyZXNzLCBpZENhcmQsIGpvYiwgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMTAkKF9jb250ZXh0MTApIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQxMC5wcmV2ID0gX2NvbnRleHQxMC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZGlzcGF0Y2ggPSBfcmVmMTkuZGlzcGF0Y2g7CiAgICAgICAgICAgICAgICBjaWQgPSBfcmVmMjAuY2lkLCBuYW1lID0gX3JlZjIwLm5hbWUsIHBob25lID0gX3JlZjIwLnBob25lLCBzZXggPSBfcmVmMjAuc2V4LCBhZ2UgPSBfcmVmMjAuYWdlLCB3ZWNoYXQgPSBfcmVmMjAud2VjaGF0LCBxcSA9IF9yZWYyMC5xcSwgYWRkcmVzcyA9IF9yZWYyMC5hZGRyZXNzLCBpZENhcmQgPSBfcmVmMjAuaWRDYXJkLCBqb2IgPSBfcmVmMjAuam9iOwogICAgICAgICAgICAgICAgX2NvbnRleHQxMC5wcmV2ID0gMjsKICAgICAgICAgICAgICAgIF9jb250ZXh0MTAubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gYXBpLmFkZGN1c3RvbWVyQ29udGFjdCh7CiAgICAgICAgICAgICAgICAgIGNpZDogY2lkLAogICAgICAgICAgICAgICAgICBuYW1lOiBuYW1lLAogICAgICAgICAgICAgICAgICBwaG9uZTogcGhvbmUsCiAgICAgICAgICAgICAgICAgIHNleDogc2V4LAogICAgICAgICAgICAgICAgICBhZ2U6IGFnZSwKICAgICAgICAgICAgICAgICAgd2VjaGF0OiB3ZWNoYXQsCiAgICAgICAgICAgICAgICAgIHFxOiBxcSwKICAgICAgICAgICAgICAgICAgYWRkcmVzczogYWRkcmVzcywKICAgICAgICAgICAgICAgICAgaWRDYXJkOiBpZENhcmQsCiAgICAgICAgICAgICAgICAgIGpvYjogam9iCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQxMC5zZW50OwoKICAgICAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgICAgIGRpc3BhdGNoKCJnZXRjb250YWN0cyIsIHsKICAgICAgICAgICAgICAgICAgICBjaWQ6IGNpZAogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgTWVzc2FnZS5zdWNjZXNzKHJlcy5tc2cpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgTWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMsICLogZTns7vkurrmt7vliqAiKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0MTAubmV4dCA9IDEzOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBfY29udGV4dDEwLnByZXYgPSAxMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0MTAudDAgPSBfY29udGV4dDEwWyJjYXRjaCJdKDIpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQxMC50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDEwLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUxMCwgbnVsbCwgW1syLCAxMF1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy/lrqLmiLfogZTns7vkurrnvJbovpEKICAgIHVwZGF0ZWN1c3RvbWVyQ29udGFjdDogZnVuY3Rpb24gdXBkYXRlY3VzdG9tZXJDb250YWN0KF9yZWYyMSwgX3JlZjIyKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxMSgpIHsKICAgICAgICB2YXIgZGlzcGF0Y2gsIGNpZCwgbmFtZSwgcGhvbmUsIHNleCwgYWdlLCB3ZWNoYXQsIHFxLCBhZGRyZXNzLCBpZENhcmQsIGpvYiwgaWQsIHJlczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTExJChfY29udGV4dDExKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MTEucHJldiA9IF9jb250ZXh0MTEubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGRpc3BhdGNoID0gX3JlZjIxLmRpc3BhdGNoOwogICAgICAgICAgICAgICAgY2lkID0gX3JlZjIyLmNpZCwgbmFtZSA9IF9yZWYyMi5uYW1lLCBwaG9uZSA9IF9yZWYyMi5waG9uZSwgc2V4ID0gX3JlZjIyLnNleCwgYWdlID0gX3JlZjIyLmFnZSwgd2VjaGF0ID0gX3JlZjIyLndlY2hhdCwgcXEgPSBfcmVmMjIucXEsIGFkZHJlc3MgPSBfcmVmMjIuYWRkcmVzcywgaWRDYXJkID0gX3JlZjIyLmlkQ2FyZCwgam9iID0gX3JlZjIyLmpvYiwgaWQgPSBfcmVmMjIuaWQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDExLnByZXYgPSAyOwogICAgICAgICAgICAgICAgX2NvbnRleHQxMS5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBhcGkudXBkYXRlY3VzdG9tZXJDb250YWN0KHsKICAgICAgICAgICAgICAgICAgY2lkOiBjaWQsCiAgICAgICAgICAgICAgICAgIG5hbWU6IG5hbWUsCiAgICAgICAgICAgICAgICAgIHBob25lOiBwaG9uZSwKICAgICAgICAgICAgICAgICAgc2V4OiBzZXgsCiAgICAgICAgICAgICAgICAgIGFnZTogYWdlLAogICAgICAgICAgICAgICAgICB3ZWNoYXQ6IHdlY2hhdCwKICAgICAgICAgICAgICAgICAgcXE6IHFxLAogICAgICAgICAgICAgICAgICBhZGRyZXNzOiBhZGRyZXNzLAogICAgICAgICAgICAgICAgICBpZENhcmQ6IGlkQ2FyZCwKICAgICAgICAgICAgICAgICAgam9iOiBqb2IsCiAgICAgICAgICAgICAgICAgIGlkOiBpZAogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0MTEuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAocmVzLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgICAgICAgICBkaXNwYXRjaCgiZ2V0Y29udGFjdHMiLCB7CiAgICAgICAgICAgICAgICAgICAgY2lkOiBjaWQKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIE1lc3NhZ2Uuc3VjY2VzcyhyZXMubXNnKTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIE1lc3NhZ2UuZXJyb3IocmVzLm1zZyk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQxMS5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgX2NvbnRleHQxMS5wcmV2ID0gOTsKICAgICAgICAgICAgICAgIF9jb250ZXh0MTEudDAgPSBfY29udGV4dDExWyJjYXRjaCJdKDIpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQxMS50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDExLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUxMSwgbnVsbCwgW1syLCA5XV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvL+WuouaIt+iBlOezu+S6uuWIoOmZpAogICAgZGV0ZWxlY3VzdG9tZXJDb250YWN0OiBmdW5jdGlvbiBkZXRlbGVjdXN0b21lckNvbnRhY3QoX3JlZjIzLCBfcmVmMjQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTEyKCkgewogICAgICAgIHZhciBkaXNwYXRjaCwgaWQsIGNpZCwgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMTIkKF9jb250ZXh0MTIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQxMi5wcmV2ID0gX2NvbnRleHQxMi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZGlzcGF0Y2ggPSBfcmVmMjMuZGlzcGF0Y2g7CiAgICAgICAgICAgICAgICBpZCA9IF9yZWYyNC5pZCwgY2lkID0gX3JlZjI0LmNpZDsKICAgICAgICAgICAgICAgIF9jb250ZXh0MTIucHJldiA9IDI7CiAgICAgICAgICAgICAgICBfY29udGV4dDEyLm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIGFwaS5kZXRlbGVjdXN0b21lckNvbnRhY3QoewogICAgICAgICAgICAgICAgICBpZDogaWQKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDEyLnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKHJlcy5jb2RlID09PSAyMDApIHsKICAgICAgICAgICAgICAgICAgZGlzcGF0Y2goImdldGNvbnRhY3RzIiwgewogICAgICAgICAgICAgICAgICAgIGNpZDogY2lkCiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICBNZXNzYWdlLnN1Y2Nlc3MocmVzLm1zZyk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBNZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0MTIubmV4dCA9IDEyOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIF9jb250ZXh0MTIucHJldiA9IDk7CiAgICAgICAgICAgICAgICBfY29udGV4dDEyLnQwID0gX2NvbnRleHQxMlsiY2F0Y2giXSgyKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0MTIudDApOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxMi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMTIsIG51bGwsIFtbMiwgOV1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy8g5a6i5oi35p2l5rqQ5L+h5oGvCiAgICBnZXRzb3VyY2U6IGZ1bmN0aW9uIGdldHNvdXJjZShfcmVmMjUsIF9yZWYyNikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMTMoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgcGFnZU5vLCBwYWdlU2l6ZSwgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMTMkKF9jb250ZXh0MTMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQxMy5wcmV2ID0gX2NvbnRleHQxMy5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjI1LmNvbW1pdDsKICAgICAgICAgICAgICAgIHBhZ2VObyA9IF9yZWYyNi5wYWdlTm8sIHBhZ2VTaXplID0gX3JlZjI2LnBhZ2VTaXplOwogICAgICAgICAgICAgICAgX2NvbnRleHQxMy5wcmV2ID0gMjsKICAgICAgICAgICAgICAgIF9jb250ZXh0MTMubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gYXBpLmdldHNvdXJjZSh7CiAgICAgICAgICAgICAgICAgIHBhZ2VObzogcGFnZU5vLAogICAgICAgICAgICAgICAgICBwYWdlU2l6ZTogcGFnZVNpemUKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDEzLnNlbnQ7CiAgICAgICAgICAgICAgICBjb21taXQoInNldHNvdWVjZSIsIHJlcy5kYXRhKTsKICAgICAgICAgICAgICAgIGNvbW1pdCgic2V0dG90YWxSb3dzIiwgcmVzLnRvdGFsUm93KTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcywgIuWuouaIt+adpea6kCIpOwogICAgICAgICAgICAgICAgX2NvbnRleHQxMy5uZXh0ID0gMTQ7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICAgIF9jb250ZXh0MTMucHJldiA9IDExOwogICAgICAgICAgICAgICAgX2NvbnRleHQxMy50MCA9IF9jb250ZXh0MTNbImNhdGNoIl0oMik7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDEzLnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTEzLCBudWxsLCBbWzIsIDExXV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvL+WuouaIt+adpea6kOa3u+WKoAogICAgYWRkc291cmNlOiBmdW5jdGlvbiBhZGRzb3VyY2UoX3JlZjI3LCBfcmVmMjgpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTE0KCkgewogICAgICAgIHZhciBkaXNwYXRjaCwgY29kZSwgZnVsbE5hbWUsIHNob3J0TmFtZSwgZGVzY3JpYmUsIGJlZ2luQXQsIGVuZEF0LCBvd25lciwgcGFnZU5vLCBwYWdlU2l6ZSwgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMTQkKF9jb250ZXh0MTQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQxNC5wcmV2ID0gX2NvbnRleHQxNC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZGlzcGF0Y2ggPSBfcmVmMjcuZGlzcGF0Y2g7CiAgICAgICAgICAgICAgICBjb2RlID0gX3JlZjI4LmNvZGUsIGZ1bGxOYW1lID0gX3JlZjI4LmZ1bGxOYW1lLCBzaG9ydE5hbWUgPSBfcmVmMjguc2hvcnROYW1lLCBkZXNjcmliZSA9IF9yZWYyOC5kZXNjcmliZSwgYmVnaW5BdCA9IF9yZWYyOC5iZWdpbkF0LCBlbmRBdCA9IF9yZWYyOC5lbmRBdCwgb3duZXIgPSBfcmVmMjgub3duZXIsIHBhZ2VObyA9IF9yZWYyOC5wYWdlTm8sIHBhZ2VTaXplID0gX3JlZjI4LnBhZ2VTaXplOwogICAgICAgICAgICAgICAgX2NvbnRleHQxNC5wcmV2ID0gMjsKICAgICAgICAgICAgICAgIF9jb250ZXh0MTQubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gYXBpLmFkZHNvdXJjZSh7CiAgICAgICAgICAgICAgICAgIGNvZGU6IGNvZGUsCiAgICAgICAgICAgICAgICAgIGZ1bGxOYW1lOiBmdWxsTmFtZSwKICAgICAgICAgICAgICAgICAgc2hvcnROYW1lOiBzaG9ydE5hbWUsCiAgICAgICAgICAgICAgICAgIGRlc2NyaWJlOiBkZXNjcmliZSwKICAgICAgICAgICAgICAgICAgYmVnaW5BdDogYmVnaW5BdCwKICAgICAgICAgICAgICAgICAgZW5kQXQ6IGVuZEF0LAogICAgICAgICAgICAgICAgICBvd25lcjogb3duZXIKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDE0LnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKHJlcy5jb2RlID09PSAyMDApIHsKICAgICAgICAgICAgICAgICAgZGlzcGF0Y2goImdldHNvdXJjZSIsIHsKICAgICAgICAgICAgICAgICAgICBwYWdlTm86IHBhZ2VObywKICAgICAgICAgICAgICAgICAgICBwYWdlU2l6ZTogcGFnZVNpemUKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIE1lc3NhZ2Uuc3VjY2VzcyhyZXMubXNnKTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIE1lc3NhZ2UuZXJyb3IocmVzLm1zZyk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQxNC5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgX2NvbnRleHQxNC5wcmV2ID0gOTsKICAgICAgICAgICAgICAgIF9jb250ZXh0MTQudDAgPSBfY29udGV4dDE0WyJjYXRjaCJdKDIpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQxNC50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDE0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUxNCwgbnVsbCwgW1syLCA5XV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvL+WuouaIt+adpea6kOe8lui+kQogICAgdXBkYXRlc291cmNlOiBmdW5jdGlvbiB1cGRhdGVzb3VyY2UoX3JlZjI5LCBfcmVmMzApIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTE1KCkgewogICAgICAgIHZhciBkaXNwYXRjaCwgaWQsIGNvZGUsIGZ1bGxOYW1lLCBzaG9ydE5hbWUsIGRlc2NyaWJlLCBiZWdpbkF0LCBlbmRBdCwgb3duZXIsIHBhZ2VObywgcGFnZVNpemUsIHJlczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTE1JChfY29udGV4dDE1KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MTUucHJldiA9IF9jb250ZXh0MTUubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGRpc3BhdGNoID0gX3JlZjI5LmRpc3BhdGNoOwogICAgICAgICAgICAgICAgaWQgPSBfcmVmMzAuaWQsIGNvZGUgPSBfcmVmMzAuY29kZSwgZnVsbE5hbWUgPSBfcmVmMzAuZnVsbE5hbWUsIHNob3J0TmFtZSA9IF9yZWYzMC5zaG9ydE5hbWUsIGRlc2NyaWJlID0gX3JlZjMwLmRlc2NyaWJlLCBiZWdpbkF0ID0gX3JlZjMwLmJlZ2luQXQsIGVuZEF0ID0gX3JlZjMwLmVuZEF0LCBvd25lciA9IF9yZWYzMC5vd25lciwgcGFnZU5vID0gX3JlZjMwLnBhZ2VObywgcGFnZVNpemUgPSBfcmVmMzAucGFnZVNpemU7CiAgICAgICAgICAgICAgICBfY29udGV4dDE1LnByZXYgPSAyOwogICAgICAgICAgICAgICAgX2NvbnRleHQxNS5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBhcGkudXBkYXRlc291cmNlKHsKICAgICAgICAgICAgICAgICAgaWQ6IGlkLAogICAgICAgICAgICAgICAgICBjb2RlOiBjb2RlLAogICAgICAgICAgICAgICAgICBmdWxsTmFtZTogZnVsbE5hbWUsCiAgICAgICAgICAgICAgICAgIHNob3J0TmFtZTogc2hvcnROYW1lLAogICAgICAgICAgICAgICAgICBkZXNjcmliZTogZGVzY3JpYmUsCiAgICAgICAgICAgICAgICAgIGJlZ2luQXQ6IGJlZ2luQXQsCiAgICAgICAgICAgICAgICAgIGVuZEF0OiBlbmRBdCwKICAgICAgICAgICAgICAgICAgb3duZXI6IG93bmVyCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQxNS5zZW50OwoKICAgICAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgICAgIGRpc3BhdGNoKCJnZXRzb3VyY2UiLCB7CiAgICAgICAgICAgICAgICAgICAgcGFnZU5vOiBwYWdlTm8sCiAgICAgICAgICAgICAgICAgICAgcGFnZVNpemU6IHBhZ2VTaXplCiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICBNZXNzYWdlLnN1Y2Nlc3MocmVzLm1zZyk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBNZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0MTUubmV4dCA9IDEyOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIF9jb250ZXh0MTUucHJldiA9IDk7CiAgICAgICAgICAgICAgICBfY29udGV4dDE1LnQwID0gX2NvbnRleHQxNVsiY2F0Y2giXSgyKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0MTUudDApOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxNS5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMTUsIG51bGwsIFtbMiwgOV1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy/lrqLmiLfmnaXmupDliKDpmaQKICAgIGRlbGV0ZXNvdXJjZTogZnVuY3Rpb24gZGVsZXRlc291cmNlKF9yZWYzMSwgX3JlZjMyKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxNigpIHsKICAgICAgICB2YXIgZGlzcGF0Y2gsIGlkLCBwYWdlTm8sIHBhZ2VTaXplLCByZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUxNiQoX2NvbnRleHQxNikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDE2LnByZXYgPSBfY29udGV4dDE2Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBkaXNwYXRjaCA9IF9yZWYzMS5kaXNwYXRjaDsKICAgICAgICAgICAgICAgIGlkID0gX3JlZjMyLmlkLCBwYWdlTm8gPSBfcmVmMzIucGFnZU5vLCBwYWdlU2l6ZSA9IF9yZWYzMi5wYWdlU2l6ZTsKICAgICAgICAgICAgICAgIF9jb250ZXh0MTYucHJldiA9IDI7CiAgICAgICAgICAgICAgICBfY29udGV4dDE2Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIGFwaS5kZWxldGVzb3VyY2UoewogICAgICAgICAgICAgICAgICBpZDogaWQKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDE2LnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKHJlcy5jb2RlID09PSAyMDApIHsKICAgICAgICAgICAgICAgICAgZGlzcGF0Y2goImdldHNvdXJjZSIsIHsKICAgICAgICAgICAgICAgICAgICBwYWdlTm86IHBhZ2VObywKICAgICAgICAgICAgICAgICAgICBwYWdlU2l6ZTogcGFnZVNpemUKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIE1lc3NhZ2Uuc3VjY2VzcyhyZXMubXNnKTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIE1lc3NhZ2UuZXJyb3IocmVzLm1zZyk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQxNi5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgX2NvbnRleHQxNi5wcmV2ID0gOTsKICAgICAgICAgICAgICAgIF9jb250ZXh0MTYudDAgPSBfY29udGV4dDE2WyJjYXRjaCJdKDIpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQxNi50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDE2LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUxNiwgbnVsbCwgW1syLCA5XV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvLyDlkqjor6LmlrnlvI/liJfooagKICAgIGdldGFkdmlzb3J5OiBmdW5jdGlvbiBnZXRhZHZpc29yeShfcmVmMzMsIF9yZWYzNCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMTcoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgcGFnZU5vLCBwYWdlU2l6ZSwgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMTckKF9jb250ZXh0MTcpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQxNy5wcmV2ID0gX2NvbnRleHQxNy5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjMzLmNvbW1pdDsKICAgICAgICAgICAgICAgIHBhZ2VObyA9IF9yZWYzNC5wYWdlTm8sIHBhZ2VTaXplID0gX3JlZjM0LnBhZ2VTaXplOwogICAgICAgICAgICAgICAgX2NvbnRleHQxNy5wcmV2ID0gMjsKICAgICAgICAgICAgICAgIF9jb250ZXh0MTcubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gYXBpLmdldGFkdmlzb3J5KHsKICAgICAgICAgICAgICAgICAgcGFnZU5vOiBwYWdlTm8sCiAgICAgICAgICAgICAgICAgIHBhZ2VTaXplOiBwYWdlU2l6ZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0MTcuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAocmVzLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgICAgICAgICBjb21taXQoInNldGFkdmlzb3J5IiwgcmVzLmRhdGEpOwogICAgICAgICAgICAgICAgICBjb21taXQoInNldHN1bSIsIHJlcy50b3RhbFJvdyk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgic2hvd2JveCIsIHRydWUpOwogICAgICAgICAgICAgICAgICBNZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcywgIuWSqOivouaWueW8j+WIl+ihqCIpOwogICAgICAgICAgICAgICAgX2NvbnRleHQxNy5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0MTcucHJldiA9IDEwOwogICAgICAgICAgICAgICAgX2NvbnRleHQxNy50MCA9IF9jb250ZXh0MTdbImNhdGNoIl0oMik7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDE3LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTcuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTE3LCBudWxsLCBbWzIsIDEwXV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvLyDlkqjor6LmlrnlvI/mt7vliqAKICAgIGFkZGFkdmlzb3J5OiBmdW5jdGlvbiBhZGRhZHZpc29yeShfcmVmMzUsIF9yZWYzNikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMTgoKSB7CiAgICAgICAgdmFyIGRpc3BhdGNoLCBuYW1lLCBkZXNjcmliZSwgcGFnZU5vLCBwYWdlU2l6ZSwgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMTgkKF9jb250ZXh0MTgpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQxOC5wcmV2ID0gX2NvbnRleHQxOC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZGlzcGF0Y2ggPSBfcmVmMzUuZGlzcGF0Y2g7CiAgICAgICAgICAgICAgICBuYW1lID0gX3JlZjM2Lm5hbWUsIGRlc2NyaWJlID0gX3JlZjM2LmRlc2NyaWJlLCBwYWdlTm8gPSBfcmVmMzYucGFnZU5vLCBwYWdlU2l6ZSA9IF9yZWYzNi5wYWdlU2l6ZTsKICAgICAgICAgICAgICAgIF9jb250ZXh0MTgucHJldiA9IDI7CiAgICAgICAgICAgICAgICBfY29udGV4dDE4Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIGFwaS5hZGRhZHZpc29yeSh7CiAgICAgICAgICAgICAgICAgIG5hbWU6IG5hbWUsCiAgICAgICAgICAgICAgICAgIGRlc2NyaWJlOiBkZXNjcmliZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0MTguc2VudDsKCiAgICAgICAgICAgICAgICBpZiAocmVzLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgICAgICAgICBkaXNwYXRjaCgiZ2V0YWR2aXNvcnkiLCB7CiAgICAgICAgICAgICAgICAgICAgcGFnZU5vOiBwYWdlTm8sCiAgICAgICAgICAgICAgICAgICAgcGFnZVNpemU6IHBhZ2VTaXplCiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICBNZXNzYWdlLnN1Y2Nlc3MocmVzLm1zZyk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBNZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0MTgubmV4dCA9IDEyOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIF9jb250ZXh0MTgucHJldiA9IDk7CiAgICAgICAgICAgICAgICBfY29udGV4dDE4LnQwID0gX2NvbnRleHQxOFsiY2F0Y2giXSgyKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0MTgudDApOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxOC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMTgsIG51bGwsIFtbMiwgOV1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy8g5ZKo6K+i5pa55byP57yW6L6RCiAgICB1cGRhdGVhZHZpc29yeTogZnVuY3Rpb24gdXBkYXRlYWR2aXNvcnkoX3JlZjM3LCBfcmVmMzgpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTE5KCkgewogICAgICAgIHZhciBkaXNwYXRjaCwgaWQsIG5hbWUsIGRlc2NyaWJlLCBwYWdlTm8sIHBhZ2VTaXplLCByZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUxOSQoX2NvbnRleHQxOSkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDE5LnByZXYgPSBfY29udGV4dDE5Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBkaXNwYXRjaCA9IF9yZWYzNy5kaXNwYXRjaDsKICAgICAgICAgICAgICAgIGlkID0gX3JlZjM4LmlkLCBuYW1lID0gX3JlZjM4Lm5hbWUsIGRlc2NyaWJlID0gX3JlZjM4LmRlc2NyaWJlLCBwYWdlTm8gPSBfcmVmMzgucGFnZU5vLCBwYWdlU2l6ZSA9IF9yZWYzOC5wYWdlU2l6ZTsKICAgICAgICAgICAgICAgIF9jb250ZXh0MTkucHJldiA9IDI7CiAgICAgICAgICAgICAgICBfY29udGV4dDE5Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIGFwaS51cGRhdGVhZHZpc29yeSh7CiAgICAgICAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgICAgICAgbmFtZTogbmFtZSwKICAgICAgICAgICAgICAgICAgZGVzY3JpYmU6IGRlc2NyaWJlCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQxOS5zZW50OwoKICAgICAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgICAgIGRpc3BhdGNoKCJnZXRhZHZpc29yeSIsIHsKICAgICAgICAgICAgICAgICAgICBwYWdlTm86IHBhZ2VObywKICAgICAgICAgICAgICAgICAgICBwYWdlU2l6ZTogcGFnZVNpemUKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIE1lc3NhZ2Uuc3VjY2VzcyhyZXMubXNnKTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIE1lc3NhZ2UuZXJyb3IocmVzLm1zZyk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQxOS5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgX2NvbnRleHQxOS5wcmV2ID0gOTsKICAgICAgICAgICAgICAgIF9jb250ZXh0MTkudDAgPSBfY29udGV4dDE5WyJjYXRjaCJdKDIpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQxOS50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDE5LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUxOSwgbnVsbCwgW1syLCA5XV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvLyDlkqjor6LmlrnlvI/liKDpmaQKICAgIGRlbGV0ZWFkdmlzb3J5OiBmdW5jdGlvbiBkZWxldGVhZHZpc29yeShfcmVmMzksIF9yZWY0MCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMjAoKSB7CiAgICAgICAgdmFyIGRpc3BhdGNoLCBpZCwgcGFnZU5vLCBwYWdlU2l6ZSwgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMjAkKF9jb250ZXh0MjApIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyMC5wcmV2ID0gX2NvbnRleHQyMC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZGlzcGF0Y2ggPSBfcmVmMzkuZGlzcGF0Y2g7CiAgICAgICAgICAgICAgICBpZCA9IF9yZWY0MC5pZCwgcGFnZU5vID0gX3JlZjQwLnBhZ2VObywgcGFnZVNpemUgPSBfcmVmNDAucGFnZVNpemU7CiAgICAgICAgICAgICAgICBfY29udGV4dDIwLnByZXYgPSAyOwogICAgICAgICAgICAgICAgX2NvbnRleHQyMC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBhcGkuZGVsZXRlYWR2aXNvcnkoewogICAgICAgICAgICAgICAgICBpZDogaWQKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDIwLnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKHJlcy5jb2RlID09PSAyMDApIHsKICAgICAgICAgICAgICAgICAgZGlzcGF0Y2goImdldGFkdmlzb3J5IiwgewogICAgICAgICAgICAgICAgICAgIHBhZ2VObzogcGFnZU5vLAogICAgICAgICAgICAgICAgICAgIHBhZ2VTaXplOiBwYWdlU2l6ZQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgTWVzc2FnZS5zdWNjZXNzKHJlcy5tc2cpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgTWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dDIwLm5leHQgPSAxMjsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICBfY29udGV4dDIwLnByZXYgPSA5OwogICAgICAgICAgICAgICAgX2NvbnRleHQyMC50MCA9IF9jb250ZXh0MjBbImNhdGNoIl0oMik7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDIwLnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MjAuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIwLCBudWxsLCBbWzIsIDldXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8vIOWuouaIt+exu+WIq+WIl+ihqAogICAgZ2V0dmlzaXRvclR5cGVhZHZpc29yeTogZnVuY3Rpb24gZ2V0dmlzaXRvclR5cGVhZHZpc29yeShfcmVmNDEsIF9yZWY0MikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMjEoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgcGFnZU5vLCBwYWdlU2l6ZSwgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMjEkKF9jb250ZXh0MjEpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyMS5wcmV2ID0gX2NvbnRleHQyMS5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjQxLmNvbW1pdDsKICAgICAgICAgICAgICAgIHBhZ2VObyA9IF9yZWY0Mi5wYWdlTm8sIHBhZ2VTaXplID0gX3JlZjQyLnBhZ2VTaXplOwogICAgICAgICAgICAgICAgX2NvbnRleHQyMS5wcmV2ID0gMjsKICAgICAgICAgICAgICAgIF9jb250ZXh0MjEubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gYXBpLmdldHZpc2l0b3JUeXBlYWR2aXNvcnkoewogICAgICAgICAgICAgICAgICBwYWdlTm86IHBhZ2VObywKICAgICAgICAgICAgICAgICAgcGFnZVNpemU6IHBhZ2VTaXplCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQyMS5zZW50OwoKICAgICAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgICAgIGNvbW1pdCgic2V0dHlwZSIsIHJlcy5kYXRhKTsKICAgICAgICAgICAgICAgICAgY29tbWl0KCJzZXRudW1iZXIiLCByZXMudG90YWxSb3cpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgTWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oInNob3dib3giLCB0cnVlKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMsICLlrqLmiLfnsbvliKvliJfooagiKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0MjEubmV4dCA9IDEzOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIxLnByZXYgPSAxMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0MjEudDAgPSBfY29udGV4dDIxWyJjYXRjaCJdKDIpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQyMS50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIxLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyMSwgbnVsbCwgW1syLCAxMF1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy8g5a6i5oi357G75Yir5YiX6KGo5re75YqgCiAgICBhZGR2aXNpdG9yVHlwZWFkdmlzb3J5OiBmdW5jdGlvbiBhZGR2aXNpdG9yVHlwZWFkdmlzb3J5KF9yZWY0MywgX3JlZjQ0KSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyMigpIHsKICAgICAgICB2YXIgZGlzcGF0Y2gsIG5hbWUsIGRlc2NyaWJlLCBwYWdlTm8sIHBhZ2VTaXplLCByZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyMiQoX2NvbnRleHQyMikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIyLnByZXYgPSBfY29udGV4dDIyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBkaXNwYXRjaCA9IF9yZWY0My5kaXNwYXRjaDsKICAgICAgICAgICAgICAgIG5hbWUgPSBfcmVmNDQubmFtZSwgZGVzY3JpYmUgPSBfcmVmNDQuZGVzY3JpYmUsIHBhZ2VObyA9IF9yZWY0NC5wYWdlTm8sIHBhZ2VTaXplID0gX3JlZjQ0LnBhZ2VTaXplOwogICAgICAgICAgICAgICAgX2NvbnRleHQyMi5wcmV2ID0gMjsKICAgICAgICAgICAgICAgIF9jb250ZXh0MjIubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gYXBpLmFkZHZpc2l0b3JUeXBlYWR2aXNvcnkoewogICAgICAgICAgICAgICAgICBuYW1lOiBuYW1lLAogICAgICAgICAgICAgICAgICBkZXNjcmliZTogZGVzY3JpYmUKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDIyLnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKHJlcy5jb2RlID09PSAyMDApIHsKICAgICAgICAgICAgICAgICAgZGlzcGF0Y2goImdldHZpc2l0b3JUeXBlYWR2aXNvcnkiLCB7CiAgICAgICAgICAgICAgICAgICAgcGFnZU5vOiBwYWdlTm8sCiAgICAgICAgICAgICAgICAgICAgcGFnZVNpemU6IHBhZ2VTaXplCiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICBNZXNzYWdlLnN1Y2Nlc3MocmVzLm1zZyk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBNZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0MjIubmV4dCA9IDEyOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIF9jb250ZXh0MjIucHJldiA9IDk7CiAgICAgICAgICAgICAgICBfY29udGV4dDIyLnQwID0gX2NvbnRleHQyMlsiY2F0Y2giXSgyKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0MjIudDApOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyMi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMjIsIG51bGwsIFtbMiwgOV1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy8g5a6i5oi357G75Yir5YiX6KGo57yW6L6RCiAgICB1cGRhdGV2aXNpdG9yVHlwZWFkdmlzb3J5OiBmdW5jdGlvbiB1cGRhdGV2aXNpdG9yVHlwZWFkdmlzb3J5KF9yZWY0NSwgX3JlZjQ2KSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyMygpIHsKICAgICAgICB2YXIgZGlzcGF0Y2gsIGlkLCBuYW1lLCBkZXNjcmliZSwgcGFnZU5vLCBwYWdlU2l6ZSwgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMjMkKF9jb250ZXh0MjMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyMy5wcmV2ID0gX2NvbnRleHQyMy5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZGlzcGF0Y2ggPSBfcmVmNDUuZGlzcGF0Y2g7CiAgICAgICAgICAgICAgICBpZCA9IF9yZWY0Ni5pZCwgbmFtZSA9IF9yZWY0Ni5uYW1lLCBkZXNjcmliZSA9IF9yZWY0Ni5kZXNjcmliZSwgcGFnZU5vID0gX3JlZjQ2LnBhZ2VObywgcGFnZVNpemUgPSBfcmVmNDYucGFnZVNpemU7CiAgICAgICAgICAgICAgICBfY29udGV4dDIzLnByZXYgPSAyOwogICAgICAgICAgICAgICAgX2NvbnRleHQyMy5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBhcGkudXBkYXRldmlzaXRvclR5cGVhZHZpc29yeSh7CiAgICAgICAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgICAgICAgbmFtZTogbmFtZSwKICAgICAgICAgICAgICAgICAgZGVzY3JpYmU6IGRlc2NyaWJlCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQyMy5zZW50OwoKICAgICAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgICAgIGRpc3BhdGNoKCJnZXR2aXNpdG9yVHlwZWFkdmlzb3J5IiwgewogICAgICAgICAgICAgICAgICAgIHBhZ2VObzogcGFnZU5vLAogICAgICAgICAgICAgICAgICAgIHBhZ2VTaXplOiBwYWdlU2l6ZQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgTWVzc2FnZS5zdWNjZXNzKHJlcy5tc2cpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgTWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dDIzLm5leHQgPSAxMjsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICBfY29udGV4dDIzLnByZXYgPSA5OwogICAgICAgICAgICAgICAgX2NvbnRleHQyMy50MCA9IF9jb250ZXh0MjNbImNhdGNoIl0oMik7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDIzLnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MjMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIzLCBudWxsLCBbWzIsIDldXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8vIOWuouaIt+exu+WIq+WIl+ihqOWIoOmZpAogICAgZGVsZXRldmlzaXRvclR5cGVhZHZpc29yeTogZnVuY3Rpb24gZGVsZXRldmlzaXRvclR5cGVhZHZpc29yeShfcmVmNDcsIF9yZWY0OCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMjQoKSB7CiAgICAgICAgdmFyIGRpc3BhdGNoLCBpZCwgcGFnZU5vLCBwYWdlU2l6ZSwgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMjQkKF9jb250ZXh0MjQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyNC5wcmV2ID0gX2NvbnRleHQyNC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZGlzcGF0Y2ggPSBfcmVmNDcuZGlzcGF0Y2g7CiAgICAgICAgICAgICAgICBpZCA9IF9yZWY0OC5pZCwgcGFnZU5vID0gX3JlZjQ4LnBhZ2VObywgcGFnZVNpemUgPSBfcmVmNDgucGFnZVNpemU7CiAgICAgICAgICAgICAgICBfY29udGV4dDI0LnByZXYgPSAyOwogICAgICAgICAgICAgICAgX2NvbnRleHQyNC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBhcGkuZGVsZXRldmlzaXRvclR5cGVhZHZpc29yeSh7CiAgICAgICAgICAgICAgICAgIGlkOiBpZAogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0MjQuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAocmVzLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgICAgICAgICBkaXNwYXRjaCgiZ2V0dmlzaXRvclR5cGVhZHZpc29yeSIsIHsKICAgICAgICAgICAgICAgICAgICBwYWdlTm86IHBhZ2VObywKICAgICAgICAgICAgICAgICAgICBwYWdlU2l6ZTogcGFnZVNpemUKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIE1lc3NhZ2Uuc3VjY2VzcyhyZXMubXNnKTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIE1lc3NhZ2UuZXJyb3IocmVzLm1zZyk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQyNC5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgX2NvbnRleHQyNC5wcmV2ID0gOTsKICAgICAgICAgICAgICAgIF9jb250ZXh0MjQudDAgPSBfY29udGV4dDI0WyJjYXRjaCJdKDIpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQyNC50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDI0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyNCwgbnVsbCwgW1syLCA5XV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvL+WuouaIt+exu+Wei+WIl+ihqAogICAgZ2V0Y3VzdG9tZXJUeXBlOiBmdW5jdGlvbiBnZXRjdXN0b21lclR5cGUoX3JlZjQ5LCBfcmVmNTApIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTI1KCkgewogICAgICAgIHZhciBjb21taXQsIHBhZ2VObywgcGFnZVNpemUsIHJlczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTI1JChfY29udGV4dDI1KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MjUucHJldiA9IF9jb250ZXh0MjUubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY0OS5jb21taXQ7CiAgICAgICAgICAgICAgICBwYWdlTm8gPSBfcmVmNTAucGFnZU5vLCBwYWdlU2l6ZSA9IF9yZWY1MC5wYWdlU2l6ZTsKICAgICAgICAgICAgICAgIF9jb250ZXh0MjUucHJldiA9IDI7CiAgICAgICAgICAgICAgICBfY29udGV4dDI1Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIGFwaS5nZXRjdXN0b21lclR5cGUoewogICAgICAgICAgICAgICAgICBwYWdlTm86IHBhZ2VObywKICAgICAgICAgICAgICAgICAgcGFnZVNpemU6IHBhZ2VTaXplCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQyNS5zZW50OwoKICAgICAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgICAgIHJlcy5kYXRhLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICAgICAgICAgIGlmIChpdGVtLnN0YXRlID09PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgICBpdGVtLnN0YXRlID0gIumCgOe6piI7CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICBpZiAoaXRlbS5zdGF0ZSA9PT0gMSkgewogICAgICAgICAgICAgICAgICAgICAgaXRlbS5zdGF0ZSA9ICLotKLliqEiOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIGNvbW1pdCgic2V0Y3VzdG9tZXJUeXBlIiwgcmVzLmRhdGEpOwogICAgICAgICAgICAgICAgICBjb21taXQoInNldHNodSIsIHJlcy50b3RhbFJvdyk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBNZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgic2hvd2JveCIsIHRydWUpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcywgIuWuouaIt+exu+Wei+WIl+ihqCIpOwogICAgICAgICAgICAgICAgX2NvbnRleHQyNS5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0MjUucHJldiA9IDEwOwogICAgICAgICAgICAgICAgX2NvbnRleHQyNS50MCA9IF9jb250ZXh0MjVbImNhdGNoIl0oMik7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDI1LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MjUuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTI1LCBudWxsLCBbWzIsIDEwXV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvL+WuouaIt+exu+Wei+a3u+WKoAogICAgYWRkY3VzdG9tZXJUeXBlOiBmdW5jdGlvbiBhZGRjdXN0b21lclR5cGUoX3JlZjUxLCBfcmVmNTIpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTI2KCkgewogICAgICAgIHZhciBkaXNwYXRjaCwgbmFtZSwgZGVzY3JpYmUsIHN0YXRlLCBwYWdlTm8sIHBhZ2VTaXplLCByZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyNiQoX2NvbnRleHQyNikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDI2LnByZXYgPSBfY29udGV4dDI2Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBkaXNwYXRjaCA9IF9yZWY1MS5kaXNwYXRjaDsKICAgICAgICAgICAgICAgIG5hbWUgPSBfcmVmNTIubmFtZSwgZGVzY3JpYmUgPSBfcmVmNTIuZGVzY3JpYmUsIHN0YXRlID0gX3JlZjUyLnN0YXRlLCBwYWdlTm8gPSBfcmVmNTIucGFnZU5vLCBwYWdlU2l6ZSA9IF9yZWY1Mi5wYWdlU2l6ZTsKICAgICAgICAgICAgICAgIF9jb250ZXh0MjYucHJldiA9IDI7CiAgICAgICAgICAgICAgICBfY29udGV4dDI2Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIGFwaS5hZGRjdXN0b21lclR5cGUoewogICAgICAgICAgICAgICAgICBuYW1lOiBuYW1lLAogICAgICAgICAgICAgICAgICBkZXNjcmliZTogZGVzY3JpYmUsCiAgICAgICAgICAgICAgICAgIHN0YXRlOiBzdGF0ZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0MjYuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAocmVzLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgICAgICAgICBkaXNwYXRjaCgiZ2V0Y3VzdG9tZXJUeXBlIiwgewogICAgICAgICAgICAgICAgICAgIHBhZ2VObzogcGFnZU5vLAogICAgICAgICAgICAgICAgICAgIHBhZ2VTaXplOiBwYWdlU2l6ZQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgTWVzc2FnZS5zdWNjZXNzKHJlcy5tc2cpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgTWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dDI2Lm5leHQgPSAxMjsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICBfY29udGV4dDI2LnByZXYgPSA5OwogICAgICAgICAgICAgICAgX2NvbnRleHQyNi50MCA9IF9jb250ZXh0MjZbImNhdGNoIl0oMik7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDI2LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MjYuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTI2LCBudWxsLCBbWzIsIDldXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8v5a6i5oi357G75Z6L57yW6L6RCiAgICB1cGRhdGVjdXN0b21lclR5cGU6IGZ1bmN0aW9uIHVwZGF0ZWN1c3RvbWVyVHlwZShfcmVmNTMsIF9yZWY1NCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMjcoKSB7CiAgICAgICAgdmFyIGRpc3BhdGNoLCBpZCwgbmFtZSwgZGVzY3JpYmUsIHN0YXRlLCBwYWdlTm8sIHBhZ2VTaXplLCByZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyNyQoX2NvbnRleHQyNykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDI3LnByZXYgPSBfY29udGV4dDI3Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBkaXNwYXRjaCA9IF9yZWY1My5kaXNwYXRjaDsKICAgICAgICAgICAgICAgIGlkID0gX3JlZjU0LmlkLCBuYW1lID0gX3JlZjU0Lm5hbWUsIGRlc2NyaWJlID0gX3JlZjU0LmRlc2NyaWJlLCBzdGF0ZSA9IF9yZWY1NC5zdGF0ZSwgcGFnZU5vID0gX3JlZjU0LnBhZ2VObywgcGFnZVNpemUgPSBfcmVmNTQucGFnZVNpemU7CiAgICAgICAgICAgICAgICBfY29udGV4dDI3LnByZXYgPSAyOwogICAgICAgICAgICAgICAgX2NvbnRleHQyNy5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBhcGkudXBkYXRlY3VzdG9tZXJUeXBlKHsKICAgICAgICAgICAgICAgICAgaWQ6IGlkLAogICAgICAgICAgICAgICAgICBuYW1lOiBuYW1lLAogICAgICAgICAgICAgICAgICBkZXNjcmliZTogZGVzY3JpYmUsCiAgICAgICAgICAgICAgICAgIHN0YXRlOiBzdGF0ZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0Mjcuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAocmVzLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgICAgICAgICBkaXNwYXRjaCgiZ2V0Y3VzdG9tZXJUeXBlIiwgewogICAgICAgICAgICAgICAgICAgIHBhZ2VObzogcGFnZU5vLAogICAgICAgICAgICAgICAgICAgIHBhZ2VTaXplOiBwYWdlU2l6ZQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgTWVzc2FnZS5zdWNjZXNzKHJlcy5tc2cpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgTWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dDI3Lm5leHQgPSAxMjsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICBfY29udGV4dDI3LnByZXYgPSA5OwogICAgICAgICAgICAgICAgX2NvbnRleHQyNy50MCA9IF9jb250ZXh0MjdbImNhdGNoIl0oMik7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDI3LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mjcuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTI3LCBudWxsLCBbWzIsIDldXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8v5a6i5oi357G75Z6L5Yig6ZmkCiAgICBkZXRlbGVjdXN0b21lclR5cGU6IGZ1bmN0aW9uIGRldGVsZWN1c3RvbWVyVHlwZShfcmVmNTUsIF9yZWY1NikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMjgoKSB7CiAgICAgICAgdmFyIGRpc3BhdGNoLCBpZCwgcGFnZU5vLCBwYWdlU2l6ZSwgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMjgkKF9jb250ZXh0MjgpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyOC5wcmV2ID0gX2NvbnRleHQyOC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZGlzcGF0Y2ggPSBfcmVmNTUuZGlzcGF0Y2g7CiAgICAgICAgICAgICAgICBpZCA9IF9yZWY1Ni5pZCwgcGFnZU5vID0gX3JlZjU2LnBhZ2VObywgcGFnZVNpemUgPSBfcmVmNTYucGFnZVNpemU7CiAgICAgICAgICAgICAgICBfY29udGV4dDI4LnByZXYgPSAyOwogICAgICAgICAgICAgICAgX2NvbnRleHQyOC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBhcGkuZGV0ZWxlY3VzdG9tZXJUeXBlKHsKICAgICAgICAgICAgICAgICAgaWQ6IGlkCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQyOC5zZW50OwoKICAgICAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgICAgIGRpc3BhdGNoKCJnZXRjdXN0b21lclR5cGUiLCB7CiAgICAgICAgICAgICAgICAgICAgcGFnZU5vOiBwYWdlTm8sCiAgICAgICAgICAgICAgICAgICAgcGFnZVNpemU6IHBhZ2VTaXplCiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICBNZXNzYWdlLnN1Y2Nlc3MocmVzLm1zZyk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBNZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0MjgubmV4dCA9IDEyOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIF9jb250ZXh0MjgucHJldiA9IDk7CiAgICAgICAgICAgICAgICBfY29udGV4dDI4LnQwID0gX2NvbnRleHQyOFsiY2F0Y2giXSgyKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0MjgudDApOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyOC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMjgsIG51bGwsIFtbMiwgOV1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy/kuJPkuJrkv6Hmga/liJfooagKICAgIGdldHNwZWNpYWx0eTogZnVuY3Rpb24gZ2V0c3BlY2lhbHR5KF9yZWY1NywgX3JlZjU4KSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyOSgpIHsKICAgICAgICB2YXIgY29tbWl0LCBwYWdlTm8sIHBhZ2VTaXplLCByZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyOSQoX2NvbnRleHQyOSkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDI5LnByZXYgPSBfY29udGV4dDI5Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNTcuY29tbWl0OwogICAgICAgICAgICAgICAgcGFnZU5vID0gX3JlZjU4LnBhZ2VObywgcGFnZVNpemUgPSBfcmVmNTgucGFnZVNpemU7CiAgICAgICAgICAgICAgICBfY29udGV4dDI5LnByZXYgPSAyOwogICAgICAgICAgICAgICAgX2NvbnRleHQyOS5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBhcGkuZ2V0c3BlY2lhbHR5KHsKICAgICAgICAgICAgICAgICAgcGFnZU5vOiBwYWdlTm8sCiAgICAgICAgICAgICAgICAgIHBhZ2VTaXplOiBwYWdlU2l6ZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0Mjkuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAocmVzLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgICAgICAgICBjb21taXQoInNldHNwZWNpYWx0eSIsIHJlcy5kYXRhKTsKICAgICAgICAgICAgICAgICAgY29tbWl0KCJzZXR0b3RhbCIsIHJlcy50b3RhbFJvdyk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgic2hvd2JveCIsIHRydWUpOwogICAgICAgICAgICAgICAgICBNZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcywgIuS4k+S4muS/oeaBr+WIl+ihqCIpOwogICAgICAgICAgICAgICAgX2NvbnRleHQyOS5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0MjkucHJldiA9IDEwOwogICAgICAgICAgICAgICAgX2NvbnRleHQyOS50MCA9IF9jb250ZXh0MjlbImNhdGNoIl0oMik7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDI5LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mjkuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTI5LCBudWxsLCBbWzIsIDEwXV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvL+S4k+S4muS/oeaBr+WIl+ihqOaWsOWingogICAgYWRkc3BlY2lhbHR5OiBmdW5jdGlvbiBhZGRzcGVjaWFsdHkoX3JlZjU5LCBfcmVmNjApIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMwKCkgewogICAgICAgIHZhciBkaXNwYXRjaCwgbmFtZSwgc3lub3BzaXMsIHBhZ2VObywgcGFnZVNpemUsIHJlczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMwJChfY29udGV4dDMwKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MzAucHJldiA9IF9jb250ZXh0MzAubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGRpc3BhdGNoID0gX3JlZjU5LmRpc3BhdGNoOwogICAgICAgICAgICAgICAgbmFtZSA9IF9yZWY2MC5uYW1lLCBzeW5vcHNpcyA9IF9yZWY2MC5zeW5vcHNpcywgcGFnZU5vID0gX3JlZjYwLnBhZ2VObywgcGFnZVNpemUgPSBfcmVmNjAucGFnZVNpemU7CiAgICAgICAgICAgICAgICBfY29udGV4dDMwLnByZXYgPSAyOwogICAgICAgICAgICAgICAgX2NvbnRleHQzMC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBhcGkuYWRkc3BlY2lhbHR5KHsKICAgICAgICAgICAgICAgICAgbmFtZTogbmFtZSwKICAgICAgICAgICAgICAgICAgc3lub3BzaXM6IHN5bm9wc2lzCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQzMC5zZW50OwoKICAgICAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgICAgIGRpc3BhdGNoKCJnZXRzcGVjaWFsdHkiLCB7CiAgICAgICAgICAgICAgICAgICAgcGFnZU5vOiBwYWdlTm8sCiAgICAgICAgICAgICAgICAgICAgcGFnZVNpemU6IHBhZ2VTaXplCiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICBNZXNzYWdlLnN1Y2Nlc3MocmVzLm1zZyk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBNZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0MzAubmV4dCA9IDEyOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIF9jb250ZXh0MzAucHJldiA9IDk7CiAgICAgICAgICAgICAgICBfY29udGV4dDMwLnQwID0gX2NvbnRleHQzMFsiY2F0Y2giXSgyKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0MzAudDApOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzMC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMzAsIG51bGwsIFtbMiwgOV1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy/kuJPkuJrkv6Hmga/liJfooajnvJbovpEKICAgIHVwZGF0ZXNwZWNpYWx0eTogZnVuY3Rpb24gdXBkYXRlc3BlY2lhbHR5KF9yZWY2MSwgX3JlZjYyKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzMSgpIHsKICAgICAgICB2YXIgZGlzcGF0Y2gsIG5hbWUsIHN5bm9wc2lzLCBwYWdlTm8sIHBhZ2VTaXplLCBpZCwgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMzEkKF9jb250ZXh0MzEpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzMS5wcmV2ID0gX2NvbnRleHQzMS5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZGlzcGF0Y2ggPSBfcmVmNjEuZGlzcGF0Y2g7CiAgICAgICAgICAgICAgICBuYW1lID0gX3JlZjYyLm5hbWUsIHN5bm9wc2lzID0gX3JlZjYyLnN5bm9wc2lzLCBwYWdlTm8gPSBfcmVmNjIucGFnZU5vLCBwYWdlU2l6ZSA9IF9yZWY2Mi5wYWdlU2l6ZSwgaWQgPSBfcmVmNjIuaWQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDMxLnByZXYgPSAyOwogICAgICAgICAgICAgICAgX2NvbnRleHQzMS5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBhcGkudXBkYXRlc3BlY2lhbHR5KHsKICAgICAgICAgICAgICAgICAgbmFtZTogbmFtZSwKICAgICAgICAgICAgICAgICAgc3lub3BzaXM6IHN5bm9wc2lzLAogICAgICAgICAgICAgICAgICBpZDogaWQKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDMxLnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKHJlcy5jb2RlID09PSAyMDApIHsKICAgICAgICAgICAgICAgICAgZGlzcGF0Y2goImdldHNwZWNpYWx0eSIsIHsKICAgICAgICAgICAgICAgICAgICBwYWdlTm86IHBhZ2VObywKICAgICAgICAgICAgICAgICAgICBwYWdlU2l6ZTogcGFnZVNpemUKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIE1lc3NhZ2Uuc3VjY2VzcyhyZXMubXNnKTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIE1lc3NhZ2UuZXJyb3IocmVzLm1zZyk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQzMS5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgX2NvbnRleHQzMS5wcmV2ID0gOTsKICAgICAgICAgICAgICAgIF9jb250ZXh0MzEudDAgPSBfY29udGV4dDMxWyJjYXRjaCJdKDIpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQzMS50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMxLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzMSwgbnVsbCwgW1syLCA5XV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvL+S4k+S4muS/oeaBr+WIl+ihqOWIoOmZpAogICAgZGV0ZWxlc3BlY2lhbHR5OiBmdW5jdGlvbiBkZXRlbGVzcGVjaWFsdHkoX3JlZjYzLCBfcmVmNjQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMyKCkgewogICAgICAgIHZhciBkaXNwYXRjaCwgcGFnZU5vLCBwYWdlU2l6ZSwgaWQsIHJlczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMyJChfY29udGV4dDMyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MzIucHJldiA9IF9jb250ZXh0MzIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGRpc3BhdGNoID0gX3JlZjYzLmRpc3BhdGNoOwogICAgICAgICAgICAgICAgcGFnZU5vID0gX3JlZjY0LnBhZ2VObywgcGFnZVNpemUgPSBfcmVmNjQucGFnZVNpemUsIGlkID0gX3JlZjY0LmlkOwogICAgICAgICAgICAgICAgX2NvbnRleHQzMi5wcmV2ID0gMjsKICAgICAgICAgICAgICAgIF9jb250ZXh0MzIubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gYXBpLmRldGVsZXNwZWNpYWx0eSh7CiAgICAgICAgICAgICAgICAgIHBhZ2VObzogcGFnZU5vLAogICAgICAgICAgICAgICAgICBwYWdlU2l6ZTogcGFnZVNpemUsCiAgICAgICAgICAgICAgICAgIGlkOiBpZAogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0MzIuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAocmVzLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgICAgICAgICBkaXNwYXRjaCgiZ2V0c3BlY2lhbHR5IiwgewogICAgICAgICAgICAgICAgICAgIHBhZ2VObzogcGFnZU5vLAogICAgICAgICAgICAgICAgICAgIHBhZ2VTaXplOiBwYWdlU2l6ZQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgTWVzc2FnZS5zdWNjZXNzKHJlcy5tc2cpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgTWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dDMyLm5leHQgPSAxMjsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICBfY29udGV4dDMyLnByZXYgPSA5OwogICAgICAgICAgICAgICAgX2NvbnRleHQzMi50MCA9IF9jb250ZXh0MzJbImNhdGNoIl0oMik7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDMyLnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MzIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMyLCBudWxsLCBbWzIsIDldXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8v5a2m5Y6G5L+h5oGv5YiX6KGoCiAgICBnZXRlZHVjYXRpb246IGZ1bmN0aW9uIGdldGVkdWNhdGlvbihfcmVmNjUsIF9yZWY2NikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMzMoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgcGFnZU5vLCBwYWdlU2l6ZSwgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMzMkKF9jb250ZXh0MzMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzMy5wcmV2ID0gX2NvbnRleHQzMy5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjY1LmNvbW1pdDsKICAgICAgICAgICAgICAgIHBhZ2VObyA9IF9yZWY2Ni5wYWdlTm8sIHBhZ2VTaXplID0gX3JlZjY2LnBhZ2VTaXplOwogICAgICAgICAgICAgICAgX2NvbnRleHQzMy5wcmV2ID0gMjsKICAgICAgICAgICAgICAgIF9jb250ZXh0MzMubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gYXBpLmdldGVkdWNhdGlvbih7CiAgICAgICAgICAgICAgICAgIHBhZ2VObzogcGFnZU5vLAogICAgICAgICAgICAgICAgICBwYWdlU2l6ZTogcGFnZVNpemUKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDMzLnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKHJlcy5jb2RlID09PSAyMDApIHsKICAgICAgICAgICAgICAgICAgY29tbWl0KCJzZXRlZHVjYXRpb24iLCByZXMuZGF0YSk7CiAgICAgICAgICAgICAgICAgIGNvbW1pdCgic2V0YWxsIiwgcmVzLnRvdGFsUm93KTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJzaG93Ym94IiwgdHJ1ZSk7CiAgICAgICAgICAgICAgICAgIE1lc3NhZ2UuZXJyb3IocmVzLm1zZyk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzLCAi5a2m5Y6G5L+h5oGv5YiX6KGoIik7CiAgICAgICAgICAgICAgICBfY29udGV4dDMzLm5leHQgPSAxMzsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgICAgX2NvbnRleHQzMy5wcmV2ID0gMTA7CiAgICAgICAgICAgICAgICBfY29udGV4dDMzLnQwID0gX2NvbnRleHQzM1siY2F0Y2giXSgyKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0MzMudDApOwoKICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzMy5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMzMsIG51bGwsIFtbMiwgMTBdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8v5a2m5Y6G5L+h5oGv5YiX6KGo5paw5aKeCiAgICBhZGRlZHVjYXRpb246IGZ1bmN0aW9uIGFkZGVkdWNhdGlvbihfcmVmNjcsIF9yZWY2OCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMzQoKSB7CiAgICAgICAgdmFyIGRpc3BhdGNoLCBuYW1lLCBzeW5vcHNpcywgcGFnZU5vLCBwYWdlU2l6ZSwgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMzQkKF9jb250ZXh0MzQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzNC5wcmV2ID0gX2NvbnRleHQzNC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZGlzcGF0Y2ggPSBfcmVmNjcuZGlzcGF0Y2g7CiAgICAgICAgICAgICAgICBuYW1lID0gX3JlZjY4Lm5hbWUsIHN5bm9wc2lzID0gX3JlZjY4LnN5bm9wc2lzLCBwYWdlTm8gPSBfcmVmNjgucGFnZU5vLCBwYWdlU2l6ZSA9IF9yZWY2OC5wYWdlU2l6ZTsKICAgICAgICAgICAgICAgIF9jb250ZXh0MzQucHJldiA9IDI7CiAgICAgICAgICAgICAgICBfY29udGV4dDM0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIGFwaS5hZGRlZHVjYXRpb24oewogICAgICAgICAgICAgICAgICBuYW1lOiBuYW1lLAogICAgICAgICAgICAgICAgICBzeW5vcHNpczogc3lub3BzaXMKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDM0LnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKHJlcy5jb2RlID09PSAyMDApIHsKICAgICAgICAgICAgICAgICAgZGlzcGF0Y2goImdldGVkdWNhdGlvbiIsIHsKICAgICAgICAgICAgICAgICAgICBwYWdlTm86IHBhZ2VObywKICAgICAgICAgICAgICAgICAgICBwYWdlU2l6ZTogcGFnZVNpemUKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIE1lc3NhZ2Uuc3VjY2VzcyhyZXMubXNnKTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIE1lc3NhZ2UuZXJyb3IocmVzLm1zZyk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQzNC5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgX2NvbnRleHQzNC5wcmV2ID0gOTsKICAgICAgICAgICAgICAgIF9jb250ZXh0MzQudDAgPSBfY29udGV4dDM0WyJjYXRjaCJdKDIpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQzNC50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDM0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzNCwgbnVsbCwgW1syLCA5XV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvL+WtpuWOhuS/oeaBr+WIl+ihqOe8lui+kQogICAgdXBkYXRlZWR1Y2F0aW9uOiBmdW5jdGlvbiB1cGRhdGVlZHVjYXRpb24oX3JlZjY5LCBfcmVmNzApIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTM1KCkgewogICAgICAgIHZhciBkaXNwYXRjaCwgbmFtZSwgc3lub3BzaXMsIHBhZ2VObywgcGFnZVNpemUsIGlkLCByZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzNSQoX2NvbnRleHQzNSkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDM1LnByZXYgPSBfY29udGV4dDM1Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBkaXNwYXRjaCA9IF9yZWY2OS5kaXNwYXRjaDsKICAgICAgICAgICAgICAgIG5hbWUgPSBfcmVmNzAubmFtZSwgc3lub3BzaXMgPSBfcmVmNzAuc3lub3BzaXMsIHBhZ2VObyA9IF9yZWY3MC5wYWdlTm8sIHBhZ2VTaXplID0gX3JlZjcwLnBhZ2VTaXplLCBpZCA9IF9yZWY3MC5pZDsKICAgICAgICAgICAgICAgIF9jb250ZXh0MzUucHJldiA9IDI7CiAgICAgICAgICAgICAgICBfY29udGV4dDM1Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIGFwaS51cGRhdGVlZHVjYXRpb24oewogICAgICAgICAgICAgICAgICBuYW1lOiBuYW1lLAogICAgICAgICAgICAgICAgICBzeW5vcHNpczogc3lub3BzaXMsCiAgICAgICAgICAgICAgICAgIGlkOiBpZAogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0MzUuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAocmVzLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgICAgICAgICBkaXNwYXRjaCgiZ2V0ZWR1Y2F0aW9uIiwgewogICAgICAgICAgICAgICAgICAgIHBhZ2VObzogcGFnZU5vLAogICAgICAgICAgICAgICAgICAgIHBhZ2VTaXplOiBwYWdlU2l6ZQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgTWVzc2FnZS5zdWNjZXNzKHJlcy5tc2cpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgTWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dDM1Lm5leHQgPSAxMjsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICBfY29udGV4dDM1LnByZXYgPSA5OwogICAgICAgICAgICAgICAgX2NvbnRleHQzNS50MCA9IF9jb250ZXh0MzVbImNhdGNoIl0oMik7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDM1LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MzUuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTM1LCBudWxsLCBbWzIsIDldXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8v5a2m5Y6G5L+h5oGv5YiX6KGo5Yig6ZmkCiAgICBkZXRlbGVlZHVjYXRpb246IGZ1bmN0aW9uIGRldGVsZWVkdWNhdGlvbihfcmVmNzEsIF9yZWY3MikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMzYoKSB7CiAgICAgICAgdmFyIGRpc3BhdGNoLCBwYWdlTm8sIHBhZ2VTaXplLCBpZCwgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMzYkKF9jb250ZXh0MzYpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzNi5wcmV2ID0gX2NvbnRleHQzNi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZGlzcGF0Y2ggPSBfcmVmNzEuZGlzcGF0Y2g7CiAgICAgICAgICAgICAgICBwYWdlTm8gPSBfcmVmNzIucGFnZU5vLCBwYWdlU2l6ZSA9IF9yZWY3Mi5wYWdlU2l6ZSwgaWQgPSBfcmVmNzIuaWQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDM2LnByZXYgPSAyOwogICAgICAgICAgICAgICAgX2NvbnRleHQzNi5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBhcGkuZGV0ZWxlZWR1Y2F0aW9uKHsKICAgICAgICAgICAgICAgICAgcGFnZU5vOiBwYWdlTm8sCiAgICAgICAgICAgICAgICAgIHBhZ2VTaXplOiBwYWdlU2l6ZSwKICAgICAgICAgICAgICAgICAgaWQ6IGlkCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQzNi5zZW50OwoKICAgICAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgICAgIGRpc3BhdGNoKCJnZXRlZHVjYXRpb24iLCB7CiAgICAgICAgICAgICAgICAgICAgcGFnZU5vOiBwYWdlTm8sCiAgICAgICAgICAgICAgICAgICAgcGFnZVNpemU6IHBhZ2VTaXplCiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICBNZXNzYWdlLnN1Y2Nlc3MocmVzLm1zZyk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBNZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0MzYubmV4dCA9IDEyOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIF9jb250ZXh0MzYucHJldiA9IDk7CiAgICAgICAgICAgICAgICBfY29udGV4dDM2LnQwID0gX2NvbnRleHQzNlsiY2F0Y2giXSgyKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0MzYudDApOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzNi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMzYsIG51bGwsIFtbMiwgOV1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy/moKHljLrkv6Hmga8KICAgIGdldGNhbXB1czogZnVuY3Rpb24gZ2V0Y2FtcHVzKF9yZWY3MywgX3JlZjc0KSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzNygpIHsKICAgICAgICB2YXIgY29tbWl0LCBwYWdlTm8sIHBhZ2VTaXplLCByZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzNyQoX2NvbnRleHQzNykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDM3LnByZXYgPSBfY29udGV4dDM3Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNzMuY29tbWl0OwogICAgICAgICAgICAgICAgcGFnZU5vID0gX3JlZjc0LnBhZ2VObywgcGFnZVNpemUgPSBfcmVmNzQucGFnZVNpemU7CiAgICAgICAgICAgICAgICBfY29udGV4dDM3LnByZXYgPSAyOwogICAgICAgICAgICAgICAgX2NvbnRleHQzNy5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBhcGkuZ2V0Y2FtcHVzKHsKICAgICAgICAgICAgICAgICAgcGFnZU5vOiBwYWdlTm8sCiAgICAgICAgICAgICAgICAgIHBhZ2VTaXplOiBwYWdlU2l6ZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0Mzcuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAocmVzLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgICAgICAgICBjb21taXQoJ3NldGNhbXB1cycsIHJlcy5kYXRhKTsKICAgICAgICAgICAgICAgICAgY29tbWl0KCdzZXR0b3RhbFJvd3AnLCByZXMudG90YWxSb3cpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgTWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oInNob3dib3giLCB0cnVlKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMsICLmoKHljLrkv6Hmga8iKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0MzcubmV4dCA9IDEzOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBfY29udGV4dDM3LnByZXYgPSAxMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0MzcudDAgPSBfY29udGV4dDM3WyJjYXRjaCJdKDIpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQzNy50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDM3LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzNywgbnVsbCwgW1syLCAxMF1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy8g5qCh5Yy65paw5aKeCiAgICBhZGRjYW1wdXM6IGZ1bmN0aW9uIGFkZGNhbXB1cyhfcmVmNzUsIF9yZWY3NikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMzgoKSB7CiAgICAgICAgdmFyIGRpc3BhdGNoLCBjb2RlLCBmdWxsTmFtZSwgc2hvcnROYW1lLCBwYWdlTm8sIHBhZ2VTaXplLCByZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzOCQoX2NvbnRleHQzOCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDM4LnByZXYgPSBfY29udGV4dDM4Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBkaXNwYXRjaCA9IF9yZWY3NS5kaXNwYXRjaDsKICAgICAgICAgICAgICAgIGNvZGUgPSBfcmVmNzYuY29kZSwgZnVsbE5hbWUgPSBfcmVmNzYuZnVsbE5hbWUsIHNob3J0TmFtZSA9IF9yZWY3Ni5zaG9ydE5hbWUsIHBhZ2VObyA9IF9yZWY3Ni5wYWdlTm8sIHBhZ2VTaXplID0gX3JlZjc2LnBhZ2VTaXplOwogICAgICAgICAgICAgICAgX2NvbnRleHQzOC5wcmV2ID0gMjsKICAgICAgICAgICAgICAgIF9jb250ZXh0MzgubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gYXBpLmFkZGNhbXB1cyh7CiAgICAgICAgICAgICAgICAgIGNvZGU6IGNvZGUsCiAgICAgICAgICAgICAgICAgIGZ1bGxOYW1lOiBmdWxsTmFtZSwKICAgICAgICAgICAgICAgICAgc2hvcnROYW1lOiBzaG9ydE5hbWUKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDM4LnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKHJlcy5jb2RlID09PSAyMDApIHsKICAgICAgICAgICAgICAgICAgZGlzcGF0Y2goImdldGNhbXB1cyIsIHsKICAgICAgICAgICAgICAgICAgICBwYWdlTm86IHBhZ2VObywKICAgICAgICAgICAgICAgICAgICBwYWdlU2l6ZTogcGFnZVNpemUKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIE1lc3NhZ2Uuc3VjY2VzcyhyZXMubXNnKTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIE1lc3NhZ2UuZXJyb3IocmVzLm1zZyk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzLCAi5qCh5Yy65paw5aKeIik7CiAgICAgICAgICAgICAgICBfY29udGV4dDM4Lm5leHQgPSAxMzsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgICAgX2NvbnRleHQzOC5wcmV2ID0gMTA7CiAgICAgICAgICAgICAgICBfY29udGV4dDM4LnQwID0gX2NvbnRleHQzOFsiY2F0Y2giXSgyKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0MzgudDApOwoKICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzOC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMzgsIG51bGwsIFtbMiwgMTBdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8vIOagoeWMuuWIoOmZpAogICAgZGVsY2FtcHVzOiBmdW5jdGlvbiBkZWxjYW1wdXMoX3JlZjc3LCBfcmVmNzgpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTM5KCkgewogICAgICAgIHZhciBkaXNwYXRjaCwgaWQsIHBhZ2VObywgcGFnZVNpemUsIHJlczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTM5JChfY29udGV4dDM5KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MzkucHJldiA9IF9jb250ZXh0MzkubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGRpc3BhdGNoID0gX3JlZjc3LmRpc3BhdGNoOwogICAgICAgICAgICAgICAgaWQgPSBfcmVmNzguaWQsIHBhZ2VObyA9IF9yZWY3OC5wYWdlTm8sIHBhZ2VTaXplID0gX3JlZjc4LnBhZ2VTaXplOwogICAgICAgICAgICAgICAgX2NvbnRleHQzOS5wcmV2ID0gMjsKICAgICAgICAgICAgICAgIF9jb250ZXh0MzkubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gYXBpLmRlbGNhbXB1cyh7CiAgICAgICAgICAgICAgICAgIGlkOiBpZAogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0Mzkuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAocmVzLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgICAgICAgICBkaXNwYXRjaCgiZ2V0Y2FtcHVzIiwgewogICAgICAgICAgICAgICAgICAgIHBhZ2VObzogcGFnZU5vLAogICAgICAgICAgICAgICAgICAgIHBhZ2VTaXplOiBwYWdlU2l6ZQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgTWVzc2FnZS5zdWNjZXNzKHJlcy5tc2cpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgTWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMsICLmoKHljLrliKDpmaQiKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0MzkubmV4dCA9IDEzOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBfY29udGV4dDM5LnByZXYgPSAxMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0MzkudDAgPSBfY29udGV4dDM5WyJjYXRjaCJdKDIpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQzOS50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDM5LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzOSwgbnVsbCwgW1syLCAxMF1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy8g5qCh5Yy657yW6L6RCiAgICB1cGRhdGF1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0YXVwZGF0ZShfcmVmNzksIF9yZWY4MCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNDAoKSB7CiAgICAgICAgdmFyIGRpc3BhdGNoLCBpZCwgY29kZSwgZnVsbE5hbWUsIHNob3J0TmFtZSwgcGFnZU5vLCBwYWdlU2l6ZSwgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNDAkKF9jb250ZXh0NDApIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0MC5wcmV2ID0gX2NvbnRleHQ0MC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZGlzcGF0Y2ggPSBfcmVmNzkuZGlzcGF0Y2g7CiAgICAgICAgICAgICAgICBpZCA9IF9yZWY4MC5pZCwgY29kZSA9IF9yZWY4MC5jb2RlLCBmdWxsTmFtZSA9IF9yZWY4MC5mdWxsTmFtZSwgc2hvcnROYW1lID0gX3JlZjgwLnNob3J0TmFtZSwgcGFnZU5vID0gX3JlZjgwLnBhZ2VObywgcGFnZVNpemUgPSBfcmVmODAucGFnZVNpemU7CiAgICAgICAgICAgICAgICBfY29udGV4dDQwLnByZXYgPSAyOwogICAgICAgICAgICAgICAgX2NvbnRleHQ0MC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBhcGkudXBkYXRhdXBkYXRlKHsKICAgICAgICAgICAgICAgICAgaWQ6IGlkLAogICAgICAgICAgICAgICAgICBjb2RlOiBjb2RlLAogICAgICAgICAgICAgICAgICBmdWxsTmFtZTogZnVsbE5hbWUsCiAgICAgICAgICAgICAgICAgIHNob3J0TmFtZTogc2hvcnROYW1lCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQ0MC5zZW50OwoKICAgICAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgICAgIGRpc3BhdGNoKCJnZXRjYW1wdXMiLCB7CiAgICAgICAgICAgICAgICAgICAgcGFnZU5vOiBwYWdlTm8sCiAgICAgICAgICAgICAgICAgICAgcGFnZVNpemU6IHBhZ2VTaXplCiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICBNZXNzYWdlLnN1Y2Nlc3MocmVzLm1zZyk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBNZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcywgIuagoeWMuuWIoOmZpCIpOwogICAgICAgICAgICAgICAgX2NvbnRleHQ0MC5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0NDAucHJldiA9IDEwOwogICAgICAgICAgICAgICAgX2NvbnRleHQ0MC50MCA9IF9jb250ZXh0NDBbImNhdGNoIl0oMik7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDQwLnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NDAuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTQwLCBudWxsLCBbWzIsIDEwXV0pOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["C:/work/workspace/rock-ui/src/store/customer/customer.js"],"names":["Vue","api","router","Message","namespaced","state","list","souecelist","talRow","totalRow","advisory","sum","listtype","tasum","customerTyplist","total","objdetail","contacts","specialty","mutations","setuserlist","data","settotalRow","setsouece","settotalRows","setadvisory","setsum","settype","setnumber","setcustomerType","setshu","setdetails","setcontacts","setspecialty","settotal","seteducation","educationlist","setall","toalall","setcampus","campuslistL","settotalRowp","totalRowp","actions","getcustomer","commit","pageNo","pageSize","id","name","mobile","wechat","qq","appellation","sex","visitortype","age","searchTerms","website","school","education","graduatedSchool","proposedMajor","source","lastAt","customerType","remarks","createAt","createAc","salesman","res","code","localStorage","setItem","error","msg","console","log","updatecustomer","dispatch","success","addcustomer","getintoPublicSea","ids","gettransfer","accountId","getoperationRecord","cid","delcustomer","getdetails","getcontacts","map","item","addcustomerContact","phone","address","idCard","job","updatecustomerContact","detelecustomerContact","getsource","addsource","fullName","shortName","describe","beginAt","endAt","owner","updatesource","deletesource","getadvisory","addadvisory","updateadvisory","deleteadvisory","getvisitorTypeadvisory","addvisitorTypeadvisory","updatevisitorTypeadvisory","deletevisitorTypeadvisory","getcustomerType","addcustomerType","updatecustomerType","detelecustomerType","getspecialty","addspecialty","synopsis","updatespecialty","detelespecialty","geteducation","addeducation","updateeducation","deteleeducation","getcampus","addcampus","delcampus","updataupdate"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport api from '../../http/api'\r\nimport router from '../../router'\r\nimport { Message } from 'element-ui'\r\nexport default {\r\n    // 开启命名空间,这个文件就是单独的一个vuex的模块\r\n    namespaced: true,\r\n    state: {\r\n        list: [],//客户列表\r\n        souecelist: [],//客户来源列表\r\n        talRow: 0,//客户列表总数\r\n        totalRow: 0, //客户来源总数\r\n        advisory: [],//咨询方式列表\r\n        sum: 0,//咨询方式总数\r\n        listtype: [], //客户类别列表\r\n        tasum: 0, // 客户类别总数\r\n        customerTyplist: [],//客户类型列表\r\n        total: 0, //客户类型总数\r\n        objdetail: {}, //客户详情\r\n        contacts: [],//客户联系人列表\r\n        specialty: [],//专业信息列表\r\n        total: 0, //专业信息列表总数\r\n        educationlist: [], //学历信息列表\r\n        toalall: 0,//学历总数\r\n        campuslistL: [],//校区信息\r\n        totalRowp: 0,//校区总数\r\n    },\r\n    mutations: {\r\n        //客户列表\r\n        setuserlist(state, data) {\r\n            state.list = data\r\n        },\r\n        //客户列表总数\r\n        settotalRow(state, data) {\r\n            state.talRow = data\r\n        },\r\n        // 客户来源列表\r\n        setsouece(state, data) {\r\n            state.souecelist = data\r\n        },\r\n        //客户来源总数\r\n        settotalRows(state, data) {\r\n            state.totalRow = data\r\n        },\r\n        //咨询方式列表\r\n        setadvisory(state, data) {\r\n            state.advisory = data\r\n        },\r\n        //咨询方式总数\r\n        setsum(state, data) {\r\n            state.sum = data\r\n        },\r\n        //客户类别列表\r\n        settype(state, data) {\r\n            state.listtype = data\r\n        },\r\n        //客户类别条数\r\n        setnumber(state, data) {\r\n            state.tasum = data\r\n        },\r\n        //客户类型列表\r\n        setcustomerType(state, data) {\r\n            state.customerTyplist = data\r\n        },\r\n        //客户类型总数\r\n        setshu(state, data) {\r\n            state.total = data\r\n        },\r\n        //客户详情\r\n        setdetails(state, data) {\r\n            state.objdetail = data\r\n        },\r\n        //客户联系人\r\n        setcontacts(state, data) {\r\n            state.contacts = data\r\n        },\r\n        // 专业信息列表\r\n        setspecialty(state, data) {\r\n            state.specialty = data\r\n        },\r\n        // 专业信息列表总数\r\n        settotal(state, data) {\r\n            state.total = data\r\n        },\r\n        //学历信息列表\r\n        seteducation(state, data) {\r\n            state.educationlist = data\r\n        },\r\n        //学历总数\r\n        setall(state, data) {\r\n            state.toalall = data\r\n        },\r\n        //校区信息\r\n        setcampus(state, data) {\r\n            state.campuslistL = data\r\n        },\r\n        // 校区总数\r\n        settotalRowp(state, data) {\r\n            state.totalRowp = data\r\n        },\r\n    },\r\n    actions: {\r\n        // 客户列表\r\n        async getcustomer({ commit }, { pageNo, pageSize, id, name, mobile,\r\n            wechat,\r\n            qq,\r\n            appellation,\r\n            sex,\r\n            visitortype,\r\n            age,\r\n            searchTerms,\r\n            website,\r\n            school,\r\n            education,\r\n            graduatedSchool,\r\n            proposedMajor,\r\n            source,\r\n            lastAt,\r\n            customerType,\r\n            remarks,\r\n            createAt,\r\n            createAc,\r\n            salesman,\r\n            state,\r\n            advisory, }) {\r\n            try {\r\n                let res = await api.getcustomer({\r\n                    pageNo, pageSize, id, name, mobile,\r\n                    wechat,\r\n                    qq,\r\n                    appellation,\r\n                    sex,\r\n                    visitortype,\r\n                    age,\r\n                    searchTerms,\r\n                    website,\r\n                    school,\r\n                    education,\r\n                    graduatedSchool,\r\n                    proposedMajor,\r\n                    source,\r\n                    lastAt,\r\n                    customerType,\r\n                    remarks,\r\n                    createAt,\r\n                    createAc,\r\n                    salesman,\r\n                    state,\r\n                    advisory,\r\n                })\r\n                if (res.code === 200) {\r\n                    commit(\"setuserlist\", res.data)\r\n                    commit('settotalRow', res.totalRow)\r\n                } else {\r\n                    localStorage.setItem(\"showbox\",true)\r\n                    Message.error(res.msg)\r\n                }\r\n                console.log(res, \"客户列表\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //编辑客户列表\r\n        async updatecustomer({ dispatch }, { id, name, mobile, wechat, qq, appellation, sex, age, searchTerms, website, school, education, graduatedSchool, proposedMajor, source, customerType, remarks, createAc, pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.updatecustomer({ id, name, mobile, wechat, qq, appellation, sex, age, searchTerms, website, school, education, graduatedSchool, proposedMajor, source, customerType, remarks, createAc })\r\n                if (res.code === 200) {\r\n                    Message.success(res.msg)\r\n                    dispatch(\"getcustomer\", {\r\n                        pageNo, pageSize, id, name, mobile,\r\n            wechat,\r\n            qq,\r\n            appellation,\r\n            sex,\r\n            visitortype,\r\n            age,\r\n            searchTerms,\r\n            website,\r\n            school,\r\n            education,\r\n            graduatedSchool,\r\n            proposedMajor,\r\n            source,\r\n            lastAt,\r\n            customerType,\r\n            remarks,\r\n            createAt,\r\n            createAc,\r\n            salesman,\r\n            state,\r\n            advisory,\r\n                    })\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        // 新增客户列表\r\n        async addcustomer({ dispatch }, { name, mobile, wechat, qq, appellation, sex, age, searchTerms, website, school, education, graduatedSchool, proposedMajor, source, customerType, remarks, createAc, pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.addcustomer({ name, mobile, wechat, qq, appellation, sex, age, searchTerms, website, school, education, graduatedSchool, proposedMajor, source, customerType, remarks, createAc })\r\n                if (res.code === 200) {\r\n                    dispatch(\"getcustomer\", {\r\n                        pageNo, pageSize, id, name, mobile,\r\n            wechat,\r\n            qq,\r\n            appellation,\r\n            sex,\r\n            visitortype,\r\n            age,\r\n            searchTerms,\r\n            website,\r\n            school,\r\n            education,\r\n            graduatedSchool,\r\n            proposedMajor,\r\n            source,\r\n            lastAt,\r\n            customerType,\r\n            remarks,\r\n            createAt,\r\n            createAc,\r\n            salesman,\r\n            state,\r\n            advisory,\r\n                    })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n                console.log(res, \"客户新增\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //客户转入公海\r\n        async getintoPublicSea({ dispatch }, { ids, pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.getintoPublicSea({ ids })\r\n                if (res.code === 200) {\r\n                    dispatch(\"getcustomer\", {\r\n                        pageNo, pageSize, id, name, mobile,\r\n                        wechat,\r\n                        qq,\r\n                        appellation,\r\n                        sex,\r\n                        visitortype,\r\n                        age,\r\n                        searchTerms,\r\n                        website,\r\n                        school,\r\n                        education,\r\n                        graduatedSchool,\r\n                        proposedMajor,\r\n                        source,\r\n                        lastAt,\r\n                        customerType,\r\n                        remarks,\r\n                        createAt,\r\n                        createAc,\r\n                        salesman,\r\n                        state,\r\n                        advisory,\r\n                    })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n                console.log(res, \"客户转入公海\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //客户转移\r\n        async gettransfer({ dispatch }, { ids, accountId, pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.gettransfer({ ids, accountId })\r\n                if (res.code === 200) {\r\n                    dispatch(\"getcustomer\", {\r\n                        pageNo, pageSize, id, name, mobile,\r\n            wechat,\r\n            qq,\r\n            appellation,\r\n            sex,\r\n            visitortype,\r\n            age,\r\n            searchTerms,\r\n            website,\r\n            school,\r\n            education,\r\n            graduatedSchool,\r\n            proposedMajor,\r\n            source,\r\n            lastAt,\r\n            customerType,\r\n            remarks,\r\n            createAt,\r\n            createAc,\r\n            salesman,\r\n            state,\r\n            advisory,\r\n                    })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //客户操纵记录\r\n        async getoperationRecord({ commit }, { cid, pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.getoperationRecord({ cid })\r\n                if (res.code === 200) {\r\n                    dispatch(\"getcustomer\", {\r\n                        pageNo, pageSize, id, name, mobile,\r\n            wechat,\r\n            qq,\r\n            appellation,\r\n            sex,\r\n            visitortype,\r\n            age,\r\n            searchTerms,\r\n            website,\r\n            school,\r\n            education,\r\n            graduatedSchool,\r\n            proposedMajor,\r\n            source,\r\n            lastAt,\r\n            customerType,\r\n            remarks,\r\n            createAt,\r\n            createAc,\r\n            salesman,\r\n            state,\r\n            advisory,\r\n                    })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n                console.log(res, \"客户操纵记录\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //删除客户列表\r\n        async delcustomer({ dispatch }, { id, pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.delcustomer({ id })\r\n                if (res.code === 200) {\r\n                    dispatch(\"getcustomer\", {\r\n                        pageNo, pageSize, id, name, mobile,\r\n            wechat,\r\n            qq,\r\n            appellation,\r\n            sex,\r\n            visitortype,\r\n            age,\r\n            searchTerms,\r\n            website,\r\n            school,\r\n            education,\r\n            graduatedSchool,\r\n            proposedMajor,\r\n            source,\r\n            lastAt,\r\n            customerType,\r\n            remarks,\r\n            createAt,\r\n            createAc,\r\n            salesman,\r\n            state,\r\n            advisory,\r\n                    })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n                console.log(res, \"客户删除\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //客户详情信息\r\n        async getdetails({ commit }, { id }) {\r\n            try {\r\n                let res = await api.getdetails({ id })\r\n                commit(\"setdetails\", res.data)\r\n                console.log(res, \"客户详情信息\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //客户联系人\r\n        async getcontacts({ commit }, { cid }) {\r\n            try {\r\n                let res = await api.getcontacts({ cid })\r\n                if (res.code === 200) {\r\n                    res.data.map(item => {\r\n                        if (item.sex === 0) {\r\n                            item.sex = \"女\"\r\n                        }\r\n                        if (item.sex === 1) {\r\n                            item.sex = \"男\"\r\n                        }\r\n                    })\r\n                    commit(\"setcontacts\", res.data)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n                console.log(res, \"联系人\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //客户联系人新增\r\n        async addcustomerContact({ dispatch }, { cid, name, phone, sex, age, wechat, qq, address, idCard, job }) {\r\n            try {\r\n                let res = await api.addcustomerContact({ cid, name, phone, sex, age, wechat, qq, address, idCard, job })\r\n                if (res.code === 200) {\r\n                    dispatch(\"getcontacts\", { cid })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n                console.log(res, \"联系人添加\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //客户联系人编辑\r\n        async updatecustomerContact({ dispatch }, { cid, name, phone, sex, age, wechat, qq, address, idCard, job, id }) {\r\n            try {\r\n                let res = await api.updatecustomerContact({ cid, name, phone, sex, age, wechat, qq, address, idCard, job, id })\r\n                if (res.code === 200) {\r\n                    dispatch(\"getcontacts\", { cid })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //客户联系人删除\r\n        async detelecustomerContact({ dispatch }, { id, cid }) {\r\n            try {\r\n                let res = await api.detelecustomerContact({ id })\r\n                if (res.code === 200) {\r\n                    dispatch(\"getcontacts\", { cid })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        // 客户来源信息\r\n        async getsource({ commit }, { pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.getsource({ pageNo, pageSize })\r\n                commit(\"setsouece\", res.data)\r\n                commit(\"settotalRows\", res.totalRow)\r\n                console.log(res, \"客户来源\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //客户来源添加\r\n        async addsource({ dispatch }, { code, fullName, shortName, describe, beginAt, endAt, owner, pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.addsource({ code, fullName, shortName, describe, beginAt, endAt, owner })\r\n                if (res.code === 200) {\r\n                    dispatch(\"getsource\", {\r\n                        pageNo, pageSize\r\n                    })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //客户来源编辑\r\n        async updatesource({ dispatch }, { id, code, fullName, shortName, describe, beginAt, endAt, owner, pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.updatesource({ id, code, fullName, shortName, describe, beginAt, endAt, owner })\r\n                if (res.code === 200) {\r\n                    dispatch(\"getsource\", {\r\n                        pageNo, pageSize\r\n                    })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //客户来源删除\r\n        async deletesource({ dispatch }, { id, pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.deletesource({ id })\r\n                if (res.code === 200) {\r\n                    dispatch(\"getsource\", {\r\n                        pageNo, pageSize\r\n                    })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        // 咨询方式列表\r\n        async getadvisory({ commit }, { pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.getadvisory({ pageNo, pageSize })\r\n                if (res.code === 200) {\r\n                    commit(\"setadvisory\", res.data)\r\n                    commit(\"setsum\", res.totalRow)\r\n                } else {\r\n                    localStorage.setItem(\"showbox\",true)\r\n                    Message.error(res.msg)\r\n                }\r\n                console.log(res, \"咨询方式列表\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        // 咨询方式添加\r\n        async addadvisory({ dispatch }, { name, describe, pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.addadvisory({ name, describe })\r\n                if (res.code === 200) {\r\n                    dispatch(\"getadvisory\", {\r\n                        pageNo, pageSize\r\n                    })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        // 咨询方式编辑\r\n        async updateadvisory({ dispatch }, { id, name, describe, pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.updateadvisory({ id, name, describe })\r\n                if (res.code === 200) {\r\n                    dispatch(\"getadvisory\", {\r\n                        pageNo, pageSize\r\n                    })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        // 咨询方式删除\r\n        async deleteadvisory({ dispatch }, { id, pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.deleteadvisory({ id })\r\n                if (res.code === 200) {\r\n                    dispatch(\"getadvisory\", {\r\n                        pageNo, pageSize\r\n                    })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        // 客户类别列表\r\n        async getvisitorTypeadvisory({ commit }, { pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.getvisitorTypeadvisory({ pageNo, pageSize })\r\n                if (res.code === 200) {\r\n                    commit(\"settype\", res.data)\r\n                    commit(\"setnumber\", res.totalRow)\r\n                } else{\r\n                    Message.error(res.msg)\r\n                    localStorage.setItem(\"showbox\",true)\r\n                }\r\n                console.log(res, \"客户类别列表\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        // 客户类别列表添加\r\n        async addvisitorTypeadvisory({ dispatch }, { name, describe, pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.addvisitorTypeadvisory({ name, describe })\r\n                if (res.code === 200) {\r\n                    dispatch(\"getvisitorTypeadvisory\", {\r\n                        pageNo, pageSize\r\n                    })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        // 客户类别列表编辑\r\n        async updatevisitorTypeadvisory({ dispatch }, { id, name, describe, pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.updatevisitorTypeadvisory({ id, name, describe })\r\n                if (res.code === 200) {\r\n                    dispatch(\"getvisitorTypeadvisory\", {\r\n                        pageNo, pageSize\r\n                    })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        // 客户类别列表删除\r\n        async deletevisitorTypeadvisory({ dispatch }, { id, pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.deletevisitorTypeadvisory({ id })\r\n                if (res.code === 200) {\r\n                    dispatch(\"getvisitorTypeadvisory\", {\r\n                        pageNo, pageSize\r\n                    })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //客户类型列表\r\n        async getcustomerType({ commit }, { pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.getcustomerType({ pageNo, pageSize })\r\n                if (res.code === 200) {\r\n                    res.data.map(item => {\r\n                        if (item.state === 0) {\r\n                            item.state = \"邀约\"\r\n                        }\r\n                        if (item.state === 1) {\r\n                            item.state = \"财务\"\r\n                        }\r\n                    })\r\n                    commit(\"setcustomerType\", res.data)\r\n                    commit(\"setshu\", res.totalRow)\r\n                } else{\r\n                    Message.error(res.msg)\r\n                    localStorage.setItem(\"showbox\",true)\r\n                }\r\n                console.log(res, \"客户类型列表\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //客户类型添加\r\n        async addcustomerType({ dispatch }, { name, describe, state, pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.addcustomerType({ name, describe, state })\r\n                if (res.code === 200) {\r\n                    dispatch(\"getcustomerType\", {\r\n                        pageNo, pageSize\r\n                    })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //客户类型编辑\r\n        async updatecustomerType({ dispatch }, { id, name, describe, state, pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.updatecustomerType({ id, name, describe, state })\r\n                if (res.code === 200) {\r\n                    dispatch(\"getcustomerType\", {\r\n                        pageNo, pageSize\r\n                    })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //客户类型删除\r\n        async detelecustomerType({ dispatch }, { id, pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.detelecustomerType({ id })\r\n                if (res.code === 200) {\r\n                    dispatch(\"getcustomerType\", {\r\n                        pageNo, pageSize\r\n                    })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //专业信息列表\r\n        async getspecialty({ commit }, { pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.getspecialty({ pageNo, pageSize })\r\n                if (res.code === 200) {\r\n                    commit(\"setspecialty\", res.data)\r\n                    commit(\"settotal\", res.totalRow)\r\n                } else {\r\n                    localStorage.setItem(\"showbox\",true)\r\n                    Message.error(res.msg)\r\n                }\r\n                console.log(res, \"专业信息列表\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //专业信息列表新增\r\n        async addspecialty({ dispatch }, { name, synopsis, pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.addspecialty({ name, synopsis })\r\n                if (res.code === 200) {\r\n                    dispatch(\"getspecialty\", {\r\n                        pageNo, pageSize\r\n                    })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //专业信息列表编辑\r\n        async updatespecialty({ dispatch }, { name, synopsis, pageNo, pageSize, id }) {\r\n            try {\r\n                let res = await api.updatespecialty({ name, synopsis, id })\r\n                if (res.code === 200) {\r\n                    dispatch(\"getspecialty\", {\r\n                        pageNo, pageSize\r\n                    })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //专业信息列表删除\r\n        async detelespecialty({ dispatch }, { pageNo, pageSize, id }) {\r\n            try {\r\n                let res = await api.detelespecialty({ pageNo, pageSize, id })\r\n                if (res.code === 200) {\r\n                    dispatch(\"getspecialty\", {\r\n                        pageNo, pageSize\r\n                    })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //学历信息列表\r\n        async geteducation({ commit }, { pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.geteducation({ pageNo, pageSize })\r\n                if (res.code === 200) {\r\n                    commit(\"seteducation\", res.data)\r\n                    commit(\"setall\", res.totalRow)\r\n                } else {\r\n                    localStorage.setItem(\"showbox\",true)\r\n                    Message.error(res.msg)\r\n                }\r\n                console.log(res, \"学历信息列表\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //学历信息列表新增\r\n        async addeducation({ dispatch }, { name, synopsis, pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.addeducation({ name, synopsis })\r\n                if (res.code === 200) {\r\n                    dispatch(\"geteducation\", {\r\n                        pageNo, pageSize\r\n                    })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //学历信息列表编辑\r\n        async updateeducation({ dispatch }, { name, synopsis, pageNo, pageSize, id }) {\r\n            try {\r\n                let res = await api.updateeducation({ name, synopsis, id })\r\n                if (res.code === 200) {\r\n                    dispatch(\"geteducation\", {\r\n                        pageNo, pageSize\r\n                    })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //学历信息列表删除\r\n        async deteleeducation({ dispatch }, { pageNo, pageSize, id }) {\r\n            try {\r\n                let res = await api.deteleeducation({ pageNo, pageSize, id })\r\n                if (res.code === 200) {\r\n                    dispatch(\"geteducation\", {\r\n                        pageNo, pageSize\r\n                    })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //校区信息\r\n        async getcampus({ commit }, { pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.getcampus({ pageNo, pageSize })\r\n                if (res.code === 200) {\r\n                    commit('setcampus', res.data)\r\n                    commit('settotalRowp', res.totalRow)\r\n                }else{\r\n                    Message.error(res.msg)\r\n                    localStorage.setItem(\"showbox\",true)\r\n                }\r\n                console.log(res, \"校区信息\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        // 校区新增\r\n        async addcampus({ dispatch }, { code, fullName, shortName, pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.addcampus({ code, fullName, shortName })\r\n                if (res.code === 200) {\r\n                    dispatch(\"getcampus\", { pageNo, pageSize })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n                console.log(res, \"校区新增\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        // 校区删除\r\n        async delcampus({ dispatch }, { id, pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.delcampus({ id })\r\n                if (res.code === 200) {\r\n                    dispatch(\"getcampus\", { pageNo, pageSize })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n                console.log(res, \"校区删除\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        // 校区编辑\r\n        async updataupdate({ dispatch }, { id, code, fullName, shortName, pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.updataupdate({ id, code, fullName, shortName })\r\n                if (res.code === 200) {\r\n                    dispatch(\"getcampus\", { pageNo, pageSize })\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n                console.log(res, \"校区删除\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n    }\r\n}"]}]}