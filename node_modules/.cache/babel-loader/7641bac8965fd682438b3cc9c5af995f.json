{"remainingRequest":"C:\\work\\workspace\\rock-ui\\node_modules\\thread-loader\\dist\\cjs.js!C:\\work\\workspace\\rock-ui\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\workspace\\rock-ui\\src\\store\\account\\account.js","dependencies":[{"path":"C:\\work\\workspace\\rock-ui\\src\\store\\account\\account.js","mtime":1610602013035},{"path":"C:\\work\\workspace\\rock-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\workspace\\rock-ui\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\workspace\\rock-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/work/workspace/rock-ui/src/store/account/account.js"],"names":["Vue","api","router","Message","namespaced","state","account","mutations","setaccount","data","actions","getaccount","commit","res","code","console","log","accountadd","dispatch","userName","nickName","password","success","msg","error","EditAccount","id","getChangeStatus","accountId","lock","err"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport api from '../../http/api'\r\nimport router from '../../router'\r\nimport { Message } from 'element-ui'\r\n\r\nexport default {\r\n    // 开启命名空间,这个文件就是单独的一个vuex的模块\r\n    namespaced: true,\r\n    state: {\r\n        account: [] //账户列表\r\n    },\r\n    mutations: {\r\n        // 账户列表\r\n        setaccount(state, data) {\r\n            state.account = data\r\n        }\r\n    },\r\n    actions: {\r\n        // 账户列表\r\n        async getaccount({ commit }) {\r\n            try {\r\n                let res = await api.getaccount()\r\n                if (res.code === 200) {\r\n                    commit(\"setaccount\", res.data)\r\n                    console.log(res, \"账户列表\")\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        // 新增账户\r\n        async accountadd({ dispatch }, { userName, nickName, password }) {\r\n            try {\r\n                let res = await api.accountadd({ userName, nickName, password })\r\n                if (res.code === 200) {\r\n                    Message.success(res.msg)\r\n                    dispatch(\"getaccount\")\r\n                }else if(res.code === 401){\r\n                    Message.error(res.msg)\r\n                }\r\n                console.log(res, \"新增账户\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        // 账户编辑\r\n        async EditAccount({ dispatch }, { userName, nickName,id }) {\r\n            try {\r\n                let res = await api.EditAccount({ userName, nickName,id })\r\n                if (res.code === 200) {\r\n                    Message.success(res.msg)\r\n                    dispatch(\"getaccount\")\r\n                }else if(res.code === 401){\r\n                    Message.error(res.msg)\r\n                }\r\n                console.log(res, \"账户编辑\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        async getChangeStatus({},{accountId,lock}){\r\n            try {\r\n                let res = await api.getChangeStatus({accountId, lock});\r\n                if (res.code === 200) {\r\n                    Message.success(res.msg)\r\n                }else if(res.code === 401){\r\n                    Message.error(res.msg)\r\n                }\r\n                console.log(res, \"账户锁定与解锁\")\r\n            }catch{\r\n                console.log(err)\r\n            }\r\n        }\r\n    }\r\n}"]}]}