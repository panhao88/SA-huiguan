{"remainingRequest":"C:\\work\\workspace\\rock-ui\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\workspace\\rock-ui\\src\\store\\user\\user.js","dependencies":[{"path":"C:\\work\\workspace\\rock-ui\\src\\store\\user\\user.js","mtime":1611218596803},{"path":"C:\\work\\workspace\\rock-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\workspace\\rock-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/work/workspace/rock-ui/src/store/user/user.js"],"names":["Vue","api","router","Message","namespaced","state","rolelist","totalRow","allmenu","mutations","setrolelist","data","setallmenu","settotalRow","actions","login","commit","username","password","captcha","res","code","success","localStorage","setItem","JSON","stringify","account","removeItem","push","console","log","error","msg","getexit","dispatch","role","pageNo","pageSize","name","lock","map","item","getadd","info","Modifythe","id","delrole","getAssign","roleId","peris","getAllMenu","children","length","item1","item2","set","del","getupdate","pname","actionKey","viewPath","icon","ptype","pid","remark","addpermissions","Therefresh","synchronous","mypermissions"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport api from '../../http/api'\r\nimport router from '../../router'\r\nimport { Message } from 'element-ui'\r\nexport default {\r\n    // 开启命名空间,这个文件就是单独的一个vuex的模块\r\n    namespaced: true,\r\n    state: {\r\n        rolelist: [],//角色\r\n        totalRow: 0, //角色总条数\r\n        allmenu: [], //权限菜单\r\n    },\r\n    mutations: {\r\n        // 角色列表\r\n        setrolelist(state, data) {\r\n            state.rolelist = data\r\n        },\r\n        // 权限菜单\r\n        setallmenu(state, data) {\r\n            state.allmenu = data\r\n        },\r\n        settotalRow(state, data) {\r\n            state.totalRow = data\r\n        }\r\n    },\r\n    actions: {\r\n        //登录\r\n        async login({ commit }, { username, password ,captcha}) {\r\n            try {\r\n                let res = await api.login({ username, password,captcha })\r\n                if (res.code === 200) {\r\n                    Message.success(\"登录成功\")\r\n                    localStorage.setItem('adminUser', JSON.stringify(res.account))\r\n                    localStorage.removeItem(\"showbox\");\r\n                    router.push('/')\r\n                    console.log(res, \"登录\")\r\n                }else{\r\n                    Message.error(res.msg)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //退出登录\r\n        async getexit({ dispatch }) {\r\n            try {\r\n                let res = await api.getexit()\r\n                console.log(res, \"退出登录\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //角色列表\r\n        async role({ commit }, { pageNo, pageSize, name, lock }) {\r\n            try {\r\n                let res = await api.role({ pageNo, pageSize, name, lock })\r\n                if (res.code === 200) {\r\n                    commit('setrolelist', res.data)\r\n                    commit('settotalRow', res.totalRow)\r\n                    res.data.map(item => {\r\n                        if (item.lock === \"1\") {\r\n                            item.lock = false\r\n                        } else if (item.lock === \"0\") {\r\n                            item.lock = true\r\n                        }\r\n                    })\r\n                }else {\r\n                    localStorage.setItem(\"showbox\",true)\r\n                    Message.error(res.msg)\r\n                }\r\n                console.log(res, \"角色列表\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //新增角色\r\n        async getadd({ dispatch }, { name, info, pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.getadd({ name, info })\r\n                if (res.code === 200) {\r\n                    dispatch(\"role\", { pageNo, pageSize })\r\n                    Message.success(res.msg)\r\n                }else{\r\n                    Message.success(\"添加失败\")\r\n                }\r\n                console.log(res, \"新增角色\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //修改角色\r\n        async Modifythe({ dispatch }, { name, info, id, lock,pageNo, pageSize}) {\r\n            try {\r\n                let res = await api.Modifythe({ name, info, id, lock })\r\n                if (res.code === 200) {\r\n                    dispatch(\"role\",{pageNo, pageSize})\r\n                    Message.success(res.msg)\r\n                }else{\r\n                    Message.error(res.msg)\r\n                }\r\n                console.log(res, \"修改角色\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //删除角色\r\n        async delrole({ dispatch }, { id, pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.delrole({ id })\r\n                if (res.code === 200) {\r\n                    Message.success(res.msg)\r\n                    dispatch(\"role\", {\r\n                        pageNo, pageSize\r\n                    })\r\n                } else {\r\n                    Message.error(\"删除失败\")\r\n                }\r\n                console.log(res, \"删除角色\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //分配权限\r\n        async getAssign({ dispatch }, { roleId, peris,pageNo, pageSize }) {\r\n            try {\r\n                let res = await api.getAssign({ roleId, peris })\r\n                if(res.code === 200){\r\n                    Message.success(res.msg)\r\n                    dispatch(\"role\", {\r\n                        pageNo, pageSize\r\n                    })\r\n                }else {\r\n                    Message.error(res.msg)\r\n                }\r\n                console.log(res, \"分配权限\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        // 权限菜单\r\n        async getAllMenu({ commit }) {\r\n            try {\r\n                let res = await api.getAllMenu()\r\n                if (res.code === 200) {\r\n                    res.data.map(item => {\r\n                        if(item.children && item.children.length > 0){\r\n                            item.children.map(item1 => {\r\n                                if(item1.children && item1.children.length > 0){\r\n                                    item1.children.map(item2 => {\r\n                                            Vue.set(item2, \"disabled\",true)\r\n                                    })    \r\n                                }else{\r\n                                    Vue.set(item1, \"disabled\",true)\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n                    commit(\"setallmenu\", res.data)\r\n                } else  {\r\n                    localStorage.setItem(\"showbox\",true)\r\n                    Message.error(res.msg)\r\n                }\r\n                console.log(res, \"权限菜单1111\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        \r\n        //删除权限菜单\r\n        async del({ dispatch }, { id }) {\r\n            try {\r\n                let res = await api.del({ id })\r\n                if (res.code === 200) {\r\n                    dispatch(\"getAllMenu\")\r\n                    Message.success(res.msg)\r\n                } else {\r\n                    Message.error(res.msg)\r\n                }\r\n                console.log(res, \"删除权限列表\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //编辑权限菜单\r\n        async getupdate({ dispatch }, { pname, actionKey, viewPath, icon, ptype, pid, remark, id }) {\r\n            try {\r\n                let res = await api.getupdate({ pname, actionKey, viewPath, icon, ptype, pid, remark, id })\r\n                if (res.code === 200) {\r\n                    Message.success(res.msg)\r\n                    dispatch(\"getAllMenu\")\r\n                } else {\r\n                    Message.error(\"编辑失败\")\r\n                }\r\n                console.log(res, \"编辑权限菜单\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //新增权限菜单\r\n        async addpermissions({ dispatch }, { pname, actionKey, viewPath, icon, ptype, pid, remark }) {\r\n            try {\r\n                let res = await api.addpermissions({ pname, actionKey, viewPath, icon, ptype, pid, remark })\r\n                if(res.code === 200){\r\n                    Message.success(res.msg)\r\n                    dispatch(\"getAllMenu\")\r\n                }\r\n                console.log(res, \"新增权限菜单\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        //刷新权限缓存\r\n        async Therefresh({ dispatch }) {\r\n            try {\r\n                let res = await api.Therefresh()\r\n                if(res.code === 200){\r\n                    Message.success(res.msg)\r\n                    dispatch(\"getAllMenu\")\r\n                }else{\r\n                    Message.error(\"同步失败\")\r\n                }\r\n                console.log(res, \"刷新权限缓存\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        // 权限同步\r\n        async synchronous({ commit }) {\r\n            try {\r\n                let res = await api.synchronous()\r\n                if(res.code === 200){\r\n                    Message.success(res.msg)\r\n                }else{\r\n                    Message.error(\"同步失败\")\r\n                }\r\n                console.log(res, \"权限同步\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n        // 我的权限\r\n        async mypermissions({ commit }) {\r\n            try {\r\n                let res = await api.mypermissions()\r\n                console.log(res, \"我的权限\")\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        },\r\n    }\r\n}"]}]}